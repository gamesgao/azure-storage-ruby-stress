require_relative "./auto_generated/core_types"
require "time"

XS = Azure::Stroage

module Azure
  module Storage
    module Utilities
      def self.get_default_request_info
        XS::AutoGenerated::InternalRequestInformation.new("uri" => "", "statusCode" => 0, "httpVerb" => "", "statusDescription" => "")
      end

      def self.timeStringToInteger(timeString)
        Time.parse(timeString).to_i()
      end

      def self.timeStampToTime(time)
        timeStamp = (time / XS::Constants::TICKS_PER_MILLISECOND - XS::Constants::UNIX_EPOCH_IN_MILLISECONDS) / XS::Constants::MILLISECONDS_PER_SECOND
        return Time.at(timeStamp)
      end

      def self.timeSpanToSecond(timeSpan)
        return timeSpan / XS::Constants::TICKS_PER_SECOND
      end

      def self.metadata_from_headers(headers)
        metadata = {}

        headers.each { |k, v|
          if key = k[/^x-ms-meta-(.*)/, 1]
            if metadata.has_key? key
              metadata[key] = [metadata[key]] unless metadata[key].respond_to? :push
              metadata[key].push(v)
            else
              metadata[key] = v
            end
          end
        }

        metadata
      end
    end
  end
end
