var search_data = {"index":{"searchIndex":["actioncontroller","addressable","capybara","ambiguous","capybaraerror","config","configuredeprecator","dsl","session","driver","base","node","drivernotfounderror","elementnotfound","expectationnotmet","features","filenotfound","frozenintime","helpers","process","infiniteredirecterror","minitest","assertions","expectations","modalnotfound","node","actions","base","document","documentmatchers","element","finders","matchers","simple","notsupportedbydrivererror","queries","ancestorquery","basequery","currentpathquery","matchquery","selectorquery","siblingquery","textquery","titlequery","rspecmatcherproxies","rspecmatchers","becomeclosed","compound","and","capybaraevaluator","or","havecurrentpath","haveselector","havetext","havetitle","matchselector","matcher","racktest","browser","csshandlers","driver","form","niluploadedfile","paramshash","node","readonlyelementerror","readonlysessionconfig","result","scopeerror","selector","css","filterset","filters","base","expressionfilter","identityexpressionfilter","nodefilter","selenium","driver","node","server","middleware","counter","session","sessionconfig","sessionmatchers","spechelper","unselectnotallowed","window","windowerror","gem","object","process","rspec","core","version","expectations","version","matchers","rack","handler","rails","selenium","webdriver","chrome","testapp","testapperror","testappothererror","webrick","log","xpath","renderer","==()","==()","==()","==()","==()","html()","[]()","[]()","[]()","[]()","[]()","[]()","_check_with_label()","_find_frame()","_reset_style()","_set_query_session_options()","_switch_to_window()","_update_style()","_verify_current_path()","_verify_match_result()","_verify_selector_result()","_verify_text()","_verify_title()","accept_alert()","accept_confirm()","accept_modal()","accept_modal()","accept_modal()","accept_prompt()","add()","add()","add_filter()","add_selector()","all()","all()","all()","all()","all_text()","all_text()","all_text()","allow_reload!()","allow_reload!()","ancestor()","and()","and_then()","app()","app_host=()","apply_expression_filters()","apply_filter()","apply_filter()","assert_all_of_selectors()","assert_current_path()","assert_matches_selector()","assert_no_current_path()","assert_no_selector()","assert_no_text()","assert_no_title()","assert_none_of_selectors()","assert_not_matches_selector()","assert_selector()","assert_text()","assert_title()","assert_valid_keys()","assert_valid_keys()","assert_valid_keys()","at()","attach_file()","attribute_is_not_blank?()","bases()","be_an_invalid_element_error()","become_closed()","body()","boot()","browser()","browser()","browser_initialized?()","browser_initialized?()","browser_initialized?()","browser_name()","build_message()","build_rack_mock_session()","call()","call()","catch_error?()","check()","check_visible_text?()","checkbox?()","checked?()","checked?()","checked?()","checked?()","checked?()","choose()","chrome?()","cleanup!()","click()","click()","click()","click()","click_button()","click_link()","click_link_or_button()","click_on()","close()","close_window()","close_window()","closed?()","config()","config()","configure()","configure()","configure()","const_missing()","content_editable?()","content_type()","count_message()","css()","css()","current?()","current_driver()","current_driver=()","current_host()","current_path()","current_scope()","current_session()","current_url()","current_url()","current_url()","current_url()","current_url()","current_window()","current_window_handle()","current_window_handle()","custom_filters()","custom_keys()","declension()","decrement()","default()","default?()","default?()","default_driver()","default_fn()","default_host=()","default_visibility()","default_wait_time()","default_wait_time=()","delete()","deprecate()","describe()","describe()","describe_all_expression_filters()","describe_within?()","description()","description()","description()","description()","description()","description()","description()","description()","description()","description()","description()","determine_subject()","disabled()","disabled?()","disabled?()","disabled?()","disabled?()","disabled?()","dismiss_confirm()","dismiss_modal()","dismiss_modal()","dismiss_modal()","dismiss_prompt()","document()","does_not_match?()","does_not_match?()","does_not_match?()","does_not_match?()","does_not_match?()","dom()","dom()","double_click()","double_click()","double_click()","drag_to()","drag_to()","drag_to()","driver()","driver()","drivers()","each()","element_script_result()","empty?()","enabled()","eql?()","error()","escape()","escape_char()","evaluate_async_script()","evaluate_async_script()","evaluate_async_script()","evaluate_script()","evaluate_script()","evaluate_script()","exact?()","exact?()","exact_text()","execute_script()","execute_script()","execute_script()","exists?()","expects_none?()","expression_filter()","expression_filter()","expression_filters()","expression_filters()","expression_filters()","extended()","extract_locator()","extract_results()","failure_message()","failure_message()","failure_message()","failure_message()","failure_message()","failure_message()","failure_message_for_should()","failure_message_for_should()","failure_message_for_should_not()","failure_message_for_should_not()","failure_message_helper()","failure_message_helper()","failure_message_when_negated()","feature()","field_labeled()","fill_in()","filter()","filter()","filter()","filter_set()","filtered_css()","filtered_xpath()","filters()","find()","find()","find_all()","find_available_port()","find_button()","find_by_attr()","find_by_class_attr()","find_by_id()","find_css()","find_css()","find_css()","find_css()","find_css()","find_css()","find_css()","find_field()","find_headless_modal()","find_link()","find_modal()","find_window()","find_xpath()","find_xpath()","find_xpath()","find_xpath()","find_xpath()","find_xpath()","find_xpath()","firefox?()","first()","follow()","follow()","follow_redirects?()","form()","format()","full_results()","get()","go_back()","go_back()","go_back()","go_forward()","go_forward()","go_forward()","has_button?()","has_checked_field?()","has_content?()","has_css?()","has_current_path?()","has_field?()","has_link?()","has_no_button?()","has_no_checked_field?()","has_no_content?()","has_no_css?()","has_no_current_path?()","has_no_field?()","has_no_link?()","has_no_select?()","has_no_selector?()","has_no_table?()","has_no_text?()","has_no_title?()","has_no_unchecked_field?()","has_no_xpath?()","has_select?()","has_selector?()","has_table?()","has_text?()","has_title?()","has_unchecked_field?()","has_xpath?()","hash()","have_button()","have_checked_field()","have_content()","have_css()","have_current_path()","have_field()","have_link()","have_select()","have_selector()","have_table()","have_text()","have_title()","have_unchecked_field()","have_xpath()","header()","headless_chrome?()","hover()","hover()","hover()","html()","html()","html()","html()","html()","included()","included()","included()","included()","increment()","initialize_copy()","inject_asset_host()","input_field?()","insert_modal_handlers()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","instance_created?()","invalid_element_errors()","invalid_element_errors()","javascript_driver()","label()","label()","lazy_select_elements()","load_selenium()","locate_field()","make_params()","marionette?()","marionette?()","match()","match()","match()","match()","match?()","match_css()","match_selector()","match_xpath()","matcher_matches?()","matches?()","matches?()","matches?()","matches?()","matches?()","matches?()","matches?()","matches_count?()","matches_count?()","matches_css?()","matches_filters?()","matches_selector?()","matches_xpath?()","maximize()","maximize_window()","maximize_window()","merge_param!()","method_missing()","middleware()","modal_error()","modal_options()","mode()","modify_selector()","monotonic_time()","multipart?()","multiple?()","multiple?()","multiple?()","name()","native()","needs_server?()","needs_server?()","negative_failure_message()","negative_failure_message()","negative_failure_message()","negative_failure_message()","negative_failure_message()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","no_such_window_error()","no_such_window_error()","node_filters()","node_filters()","node_filters()","normalize_whitespace()","not_matches_css?()","not_matches_selector?()","not_matches_xpath?()","open_file()","open_new_window()","open_new_window()","open_new_window()","options()","or()","original_filename()","page()","params()","parent()","path()","path()","path()","path()","path()","path()","pending_requests?()","pending_requests?()","port_key()","ports()","post()","prepare_path()","process()","process_and_follow_redirects()","put()","query()","query()","quietly()","quit()","radio?()","raise_server_error!()","raise_unless_current()","read()","readonly?()","readonly?()","readonly?()","redirect_limit()","refresh()","refresh()","refresh()","refresh()","refresh()","refute_matches_selector()","refute_selector()","register_driver()","register_server()","reload()","reload()","remove()","remove()","request()","request_method()","request_path()","reset()","reset!()","reset!()","reset!()","reset!()","reset!()","reset!()","reset_cache!()","reset_error!()","reset_host!()","reset_session!()","reset_sessions!()","reset_threadsafe()","resize_to()","resize_window_to()","resize_window_to()","resolve_for()","resolve_for()","resolve_for()","resolve_for()","resolves_for?()","resolves_for?()","respond_to_missing?()","response()","response_headers()","response_headers()","response_headers()","responsive?()","rest()","reuse_server=()","right_click()","right_click()","right_click()","rspec2?()","run_default_server()","run_specs()","save_and_open_page()","save_and_open_page_path=()","save_and_open_screenshot()","save_page()","save_screenshot()","save_screenshot()","save_screenshot()","scopes()","select()","select_node()","select_node()","select_option()","select_option()","select_option()","select_option()","selected?()","selected?()","selected?()","selected?()","selected?()","send_keys()","send_keys()","send_keys()","server()","server=()","server_errors=()","server_host()","servers()","session_name()","session_name=()","session_options()","session_options()","session_options()","session_options()","session_options()","session_options()","session_pool()","session_query_args()","set()","set()","set()","set()","set_checkbox()","set_input()","set_radio()","set_text()","should_be_on()","sibling()","silence_stream()","silenced_unknown_error_message?()","silenced_unknown_error_messages()","size()","size()","skip?()","source()","spec()","status_code()","status_code()","status_code()","string()","string_node()","submit()","submit()","submit()","supports_exact?()","switch_to_frame()","switch_to_frame()","switch_to_frame()","switch_to_window()","switch_to_window()","switch_to_window()","sync_element()","sync_element()","synced_resolve()","synchronize()","synchronize()","tag_name()","tag_name()","tag_name()","tag_name()","tag_name()","text()","text()","text()","text()","text_or_password?()","textarea?()","threadsafe=()","title()","title()","title()","title()","title()","to_params_hash()","to_regexp()","trigger()","trigger()","type()","uncheck()","unnormalized_text()","unselect()","unselect_option()","unselect_option()","unselect_option()","unselect_option()","unwrap_script_result()","update()","use_default_driver()","using_driver()","using_session()","using_session()","using_wait_time()","using_wait_time()","using_wait_time()","valid_keys()","valid_keys()","valid_keys()","valid_keys()","valid_keys()","valid_value?()","value()","value()","value()","value()","value()","visible()","visible()","visible()","visible?()","visible?()","visible?()","visible?()","visible?()","visible_text()","visible_text()","visible_text()","visit()","visit()","visit()","visit()","visit()","visit_host_links()","wait()","wait()","wait?()","wait?()","wait_for_pending_requests()","wait_for_stable_size()","warn_exact_usage()","where()","win_size()","window_handles()","window_handles()","window_opened_by()","window_size()","window_size()","windows()","within()","within()","within_element()","within_fieldset()","within_frame()","within_given_window()","within_table()","within_window()","within_window()","within_window()","wrap()","wrap_does_not_match?()","wrap_matches?()","xpath()","xpath()","another_test_file","capybara.jpg","no_extension","test_file","jquery-ui.js","jquery.js","test.js"],"longSearchIndex":["actioncontroller","addressable","capybara","capybara::ambiguous","capybara::capybaraerror","capybara::config","capybara::configuredeprecator","capybara::dsl","capybara::dsl::session","capybara::driver","capybara::driver::base","capybara::driver::node","capybara::drivernotfounderror","capybara::elementnotfound","capybara::expectationnotmet","capybara::features","capybara::filenotfound","capybara::frozenintime","capybara::helpers","capybara::helpers::process","capybara::infiniteredirecterror","capybara::minitest","capybara::minitest::assertions","capybara::minitest::expectations","capybara::modalnotfound","capybara::node","capybara::node::actions","capybara::node::base","capybara::node::document","capybara::node::documentmatchers","capybara::node::element","capybara::node::finders","capybara::node::matchers","capybara::node::simple","capybara::notsupportedbydrivererror","capybara::queries","capybara::queries::ancestorquery","capybara::queries::basequery","capybara::queries::currentpathquery","capybara::queries::matchquery","capybara::queries::selectorquery","capybara::queries::siblingquery","capybara::queries::textquery","capybara::queries::titlequery","capybara::rspecmatcherproxies","capybara::rspecmatchers","capybara::rspecmatchers::becomeclosed","capybara::rspecmatchers::compound","capybara::rspecmatchers::compound::and","capybara::rspecmatchers::compound::capybaraevaluator","capybara::rspecmatchers::compound::or","capybara::rspecmatchers::havecurrentpath","capybara::rspecmatchers::haveselector","capybara::rspecmatchers::havetext","capybara::rspecmatchers::havetitle","capybara::rspecmatchers::matchselector","capybara::rspecmatchers::matcher","capybara::racktest","capybara::racktest::browser","capybara::racktest::csshandlers","capybara::racktest::driver","capybara::racktest::form","capybara::racktest::form::niluploadedfile","capybara::racktest::form::paramshash","capybara::racktest::node","capybara::readonlyelementerror","capybara::readonlysessionconfig","capybara::result","capybara::scopeerror","capybara::selector","capybara::selector::css","capybara::selector::filterset","capybara::selector::filters","capybara::selector::filters::base","capybara::selector::filters::expressionfilter","capybara::selector::filters::identityexpressionfilter","capybara::selector::filters::nodefilter","capybara::selenium","capybara::selenium::driver","capybara::selenium::node","capybara::server","capybara::server::middleware","capybara::server::middleware::counter","capybara::session","capybara::sessionconfig","capybara::sessionmatchers","capybara::spechelper","capybara::unselectnotallowed","capybara::window","capybara::windowerror","gem","object","process","rspec","rspec::core","rspec::core::version","rspec::expectations","rspec::expectations::version","rspec::matchers","rack","rack::handler","rails","selenium","selenium::webdriver","selenium::webdriver::chrome","testapp","testapp::testapperror","testapp::testappothererror","webrick","webrick::log","xpath","xpath::renderer","capybara::driver::node#==()","capybara::node::matchers#==()","capybara::racktest::node#==()","capybara::selenium::node#==()","capybara::window#==()","capybara::html()","capybara::driver::node#[]()","capybara::node::element#[]()","capybara::node::simple#[]()","capybara::racktest::node#[]()","capybara::result#[]()","capybara::selenium::node#[]()","capybara::node::actions#_check_with_label()","capybara::session#_find_frame()","capybara::node::actions#_reset_style()","capybara::node::matchers#_set_query_session_options()","capybara::session#_switch_to_window()","capybara::node::actions#_update_style()","capybara::sessionmatchers#_verify_current_path()","capybara::node::matchers#_verify_match_result()","capybara::node::matchers#_verify_selector_result()","capybara::node::matchers#_verify_text()","capybara::node::documentmatchers#_verify_title()","capybara::session#accept_alert()","capybara::session#accept_confirm()","capybara::driver::base#accept_modal()","capybara::selenium::driver#accept_modal()","capybara::session#accept_modal()","capybara::session#accept_prompt()","capybara::selector::add()","capybara::selector::filterset::add()","capybara::selector::filterset#add_filter()","capybara::add_selector()","capybara::node::finders#all()","capybara::rspecmatcherproxies#all()","capybara::selector::all()","capybara::selector::filterset::all()","capybara::driver::node#all_text()","capybara::racktest::node#all_text()","capybara::selenium::node#all_text()","capybara::node::element#allow_reload!()","capybara::node::simple#allow_reload!()","capybara::node::finders#ancestor()","capybara::rspecmatchers::compound#and()","capybara::rspecmatchers::compound#and_then()","capybara::racktest::browser#app()","capybara::sessionconfig#app_host=()","capybara::queries::selectorquery#apply_expression_filters()","capybara::selector::filters::expressionfilter#apply_filter()","capybara::selector::filters::identityexpressionfilter#apply_filter()","capybara::node::matchers#assert_all_of_selectors()","capybara::sessionmatchers#assert_current_path()","capybara::node::matchers#assert_matches_selector()","capybara::sessionmatchers#assert_no_current_path()","capybara::node::matchers#assert_no_selector()","capybara::node::matchers#assert_no_text()","capybara::node::documentmatchers#assert_no_title()","capybara::node::matchers#assert_none_of_selectors()","capybara::node::matchers#assert_not_matches_selector()","capybara::node::matchers#assert_selector()","capybara::node::matchers#assert_text()","capybara::node::documentmatchers#assert_title()","capybara::queries::basequery#assert_valid_keys()","capybara::queries::currentpathquery#assert_valid_keys()","capybara::queries::selectorquery#assert_valid_keys()","capybara::result#at()","capybara::node::actions#attach_file()","capybara::racktest::node#attribute_is_not_blank?()","object#bases()","object#be_an_invalid_element_error()","capybara::rspecmatchers#become_closed()","capybara::session#body()","capybara::server#boot()","capybara::racktest::driver#browser()","capybara::selenium::driver#browser()","capybara::driver::base#browser_initialized?()","capybara::racktest::driver#browser_initialized?()","capybara::selenium::driver#browser_initialized?()","capybara::selenium::driver#browser_name()","capybara::queries::textquery#build_message()","capybara::racktest::browser#build_rack_mock_session()","capybara::selector#call()","capybara::server::middleware#call()","capybara::node::base#catch_error?()","capybara::node::actions#check()","capybara::queries::textquery#check_visible_text?()","capybara::racktest::node#checkbox?()","capybara::driver::node#checked?()","capybara::node::element#checked?()","capybara::node::simple#checked?()","capybara::racktest::node#checked?()","capybara::selenium::node#checked?()","capybara::node::actions#choose()","capybara::selenium::driver#chrome?()","capybara::session#cleanup!()","capybara::driver::node#click()","capybara::node::element#click()","capybara::racktest::node#click()","capybara::selenium::node#click()","capybara::node::actions#click_button()","capybara::node::actions#click_link()","capybara::node::actions#click_link_or_button()","capybara::node::actions#click_on()","capybara::window#close()","capybara::driver::base#close_window()","capybara::selenium::driver#close_window()","capybara::window#closed?()","capybara::config()","capybara::session#config()","capybara::configure()","capybara::session#configure()","capybara::spechelper::configure()","capybara::selector::const_missing()","capybara::selenium::node#content_editable?()","capybara::racktest::form::niluploadedfile#content_type()","capybara::queries::basequery#count_message()","capybara::queries::selectorquery#css()","capybara::selector#css()","capybara::window#current?()","capybara::current_driver()","capybara::current_driver=()","capybara::session#current_host()","capybara::session#current_path()","capybara::session#current_scope()","capybara::current_session()","capybara::driver::base#current_url()","capybara::racktest::browser#current_url()","capybara::racktest::driver#current_url()","capybara::selenium::driver#current_url()","capybara::session#current_url()","capybara::session#current_window()","capybara::driver::base#current_window_handle()","capybara::selenium::driver#current_window_handle()","capybara::selector#custom_filters()","capybara::queries::selectorquery#custom_keys()","capybara::helpers#declension()","capybara::server::middleware::counter#decrement()","capybara::selector::filters::base#default()","capybara::selector::filters::base#default?()","capybara::selector::filters::identityexpressionfilter#default?()","capybara::config#default_driver()","capybara::session#default_fn()","capybara::sessionconfig#default_host=()","capybara::selector#default_visibility()","capybara::config#default_wait_time()","capybara::config#default_wait_time=()","capybara::racktest::driver#delete()","capybara::config#deprecate()","capybara::selector#describe()","capybara::selector::filterset#describe()","capybara::selector#describe_all_expression_filters()","capybara::queries::selectorquery#describe_within?()","capybara::queries::ancestorquery#description()","capybara::queries::selectorquery#description()","capybara::queries::siblingquery#description()","capybara::queries::textquery#description()","capybara::rspecmatchers::havecurrentpath#description()","capybara::rspecmatchers::haveselector#description()","capybara::rspecmatchers::havetext#description()","capybara::rspecmatchers::havetitle#description()","capybara::rspecmatchers::matchselector#description()","capybara::selector#description()","capybara::selector::filterset#description()","capybara::minitest::assertions#determine_subject()","capybara::racktest::csshandlers#disabled()","capybara::driver::node#disabled?()","capybara::node::element#disabled?()","capybara::node::simple#disabled?()","capybara::racktest::node#disabled?()","capybara::selenium::node#disabled?()","capybara::session#dismiss_confirm()","capybara::driver::base#dismiss_modal()","capybara::selenium::driver#dismiss_modal()","capybara::session#dismiss_modal()","capybara::session#dismiss_prompt()","capybara::session#document()","capybara::rspecmatchers::havecurrentpath#does_not_match?()","capybara::rspecmatchers::haveselector#does_not_match?()","capybara::rspecmatchers::havetext#does_not_match?()","capybara::rspecmatchers::havetitle#does_not_match?()","capybara::rspecmatchers::matchselector#does_not_match?()","capybara::racktest::browser#dom()","capybara::racktest::driver#dom()","capybara::driver::node#double_click()","capybara::node::element#double_click()","capybara::selenium::node#double_click()","capybara::driver::node#drag_to()","capybara::node::element#drag_to()","capybara::selenium::node#drag_to()","capybara::node::base#driver()","capybara::session#driver()","capybara::drivers()","capybara::result#each()","capybara::session#element_script_result()","capybara::result#empty?()","capybara::racktest::csshandlers#enabled()","capybara::window#eql?()","capybara::server#error()","capybara::selector::css::escape()","capybara::selector::css::escape_char()","capybara::driver::base#evaluate_async_script()","capybara::selenium::driver#evaluate_async_script()","capybara::session#evaluate_async_script()","capybara::driver::base#evaluate_script()","capybara::selenium::driver#evaluate_script()","capybara::session#evaluate_script()","capybara::queries::selectorquery#exact?()","capybara::queries::textquery#exact?()","capybara::queries::selectorquery#exact_text()","capybara::driver::base#execute_script()","capybara::selenium::driver#execute_script()","capybara::session#execute_script()","capybara::window#exists?()","capybara::queries::basequery#expects_none?()","capybara::selector#expression_filter()","capybara::selector::filterset#expression_filter()","capybara::queries::selectorquery#expression_filters()","capybara::selector#expression_filters()","capybara::selector::filterset#expression_filters()","capybara::dsl::extended()","capybara::minitest::assertions#extract_locator()","capybara::spechelper#extract_results()","capybara::queries::basequery#failure_message()","capybara::queries::currentpathquery#failure_message()","capybara::queries::textquery#failure_message()","capybara::queries::titlequery#failure_message()","capybara::rspecmatchers::becomeclosed#failure_message()","capybara::result#failure_message()","capybara::rspecmatchers::becomeclosed#failure_message_for_should()","capybara::rspecmatchers::matcher#failure_message_for_should()","capybara::rspecmatchers::becomeclosed#failure_message_for_should_not()","capybara::rspecmatchers::matcher#failure_message_for_should_not()","capybara::queries::currentpathquery#failure_message_helper()","capybara::queries::titlequery#failure_message_helper()","capybara::rspecmatchers::becomeclosed#failure_message_when_negated()","object::feature()","capybara::node::finders#field_labeled()","capybara::node::actions#fill_in()","capybara::selector#filter()","capybara::selector::filterset#filter()","capybara::spechelper::filter()","capybara::selector#filter_set()","capybara::queries::selectorquery#filtered_css()","capybara::queries::selectorquery#filtered_xpath()","capybara::selector::filterset#filters()","capybara::node::finders#find()","capybara::racktest::browser#find()","capybara::node::finders#find_all()","capybara::server#find_available_port()","capybara::node::finders#find_button()","capybara::selector#find_by_attr()","capybara::selector#find_by_class_attr()","capybara::node::finders#find_by_id()","capybara::driver::base#find_css()","capybara::node::base#find_css()","capybara::node::simple#find_css()","capybara::racktest::driver#find_css()","capybara::racktest::node#find_css()","capybara::selenium::driver#find_css()","capybara::selenium::node#find_css()","capybara::node::finders#find_field()","capybara::selenium::driver#find_headless_modal()","capybara::node::finders#find_link()","capybara::selenium::driver#find_modal()","capybara::selenium::driver#find_window()","capybara::driver::base#find_xpath()","capybara::node::base#find_xpath()","capybara::node::simple#find_xpath()","capybara::racktest::driver#find_xpath()","capybara::racktest::node#find_xpath()","capybara::selenium::driver#find_xpath()","capybara::selenium::node#find_xpath()","capybara::selenium::driver#firefox?()","capybara::node::finders#first()","capybara::racktest::browser#follow()","capybara::racktest::driver#follow()","capybara::racktest::driver#follow_redirects?()","capybara::racktest::node#form()","capybara::rspecmatchers::havetext#format()","capybara::result#full_results()","capybara::racktest::driver#get()","capybara::driver::base#go_back()","capybara::selenium::driver#go_back()","capybara::session#go_back()","capybara::driver::base#go_forward()","capybara::selenium::driver#go_forward()","capybara::session#go_forward()","capybara::node::matchers#has_button?()","capybara::node::matchers#has_checked_field?()","capybara::node::matchers#has_content?()","capybara::node::matchers#has_css?()","capybara::sessionmatchers#has_current_path?()","capybara::node::matchers#has_field?()","capybara::node::matchers#has_link?()","capybara::node::matchers#has_no_button?()","capybara::node::matchers#has_no_checked_field?()","capybara::node::matchers#has_no_content?()","capybara::node::matchers#has_no_css?()","capybara::sessionmatchers#has_no_current_path?()","capybara::node::matchers#has_no_field?()","capybara::node::matchers#has_no_link?()","capybara::node::matchers#has_no_select?()","capybara::node::matchers#has_no_selector?()","capybara::node::matchers#has_no_table?()","capybara::node::matchers#has_no_text?()","capybara::node::documentmatchers#has_no_title?()","capybara::node::matchers#has_no_unchecked_field?()","capybara::node::matchers#has_no_xpath?()","capybara::node::matchers#has_select?()","capybara::node::matchers#has_selector?()","capybara::node::matchers#has_table?()","capybara::node::matchers#has_text?()","capybara::node::documentmatchers#has_title?()","capybara::node::matchers#has_unchecked_field?()","capybara::node::matchers#has_xpath?()","capybara::window#hash()","capybara::rspecmatchers#have_button()","capybara::rspecmatchers#have_checked_field()","capybara::rspecmatchers#have_content()","capybara::rspecmatchers#have_css()","capybara::rspecmatchers#have_current_path()","capybara::rspecmatchers#have_field()","capybara::rspecmatchers#have_link()","capybara::rspecmatchers#have_select()","capybara::rspecmatchers#have_selector()","capybara::rspecmatchers#have_table()","capybara::rspecmatchers#have_text()","capybara::rspecmatchers#have_title()","capybara::rspecmatchers#have_unchecked_field()","capybara::rspecmatchers#have_xpath()","capybara::racktest::driver#header()","capybara::selenium::driver#headless_chrome?()","capybara::driver::node#hover()","capybara::node::element#hover()","capybara::selenium::node#hover()","capybara::driver::base#html()","capybara::racktest::browser#html()","capybara::racktest::driver#html()","capybara::selenium::driver#html()","capybara::session#html()","capybara::included()","capybara::dsl::included()","capybara::features::included()","rspec::matchers::included()","capybara::server::middleware::counter#increment()","capybara::sessionconfig#initialize_copy()","capybara::helpers#inject_asset_host()","capybara::racktest::node#input_field?()","capybara::selenium::driver#insert_modal_handlers()","capybara::driver::node#inspect()","capybara::node::document#inspect()","capybara::node::element#inspect()","capybara::node::simple#inspect()","capybara::session#inspect()","capybara::window#inspect()","capybara::session::instance_created?()","capybara::driver::base#invalid_element_errors()","capybara::selenium::driver#invalid_element_errors()","capybara::config#javascript_driver()","capybara::queries::selectorquery#label()","capybara::selector#label()","capybara::result#lazy_select_elements()","capybara::selenium::driver#load_selenium()","capybara::selector#locate_field()","capybara::racktest::form#make_params()","capybara::selenium::driver#marionette?()","capybara::spechelper#marionette?()","capybara::queries::selectorquery#match()","capybara::rspecmatchers::compound::and#match()","capybara::rspecmatchers::compound::or#match()","capybara::selector#match()","capybara::selector#match?()","capybara::rspecmatchers#match_css()","capybara::rspecmatchers#match_selector()","capybara::rspecmatchers#match_xpath()","capybara::rspecmatchers::compound::capybaraevaluator#matcher_matches?()","capybara::rspecmatchers::becomeclosed#matches?()","capybara::rspecmatchers::havecurrentpath#matches?()","capybara::rspecmatchers::haveselector#matches?()","capybara::rspecmatchers::havetext#matches?()","capybara::rspecmatchers::havetitle#matches?()","capybara::rspecmatchers::matchselector#matches?()","capybara::selector::filters::nodefilter#matches?()","capybara::queries::basequery#matches_count?()","capybara::result#matches_count?()","capybara::node::matchers#matches_css?()","capybara::queries::selectorquery#matches_filters?()","capybara::node::matchers#matches_selector?()","capybara::node::matchers#matches_xpath?()","capybara::window#maximize()","capybara::driver::base#maximize_window()","capybara::selenium::driver#maximize_window()","capybara::racktest::form#merge_param!()","capybara::configuredeprecator#method_missing()","capybara::server#middleware()","capybara::selenium::driver#modal_error()","capybara::session#modal_options()","capybara::mode()","capybara::modify_selector()","capybara::helpers#monotonic_time()","capybara::racktest::form#multipart?()","capybara::driver::node#multiple?()","capybara::node::element#multiple?()","capybara::selenium::node#multiple?()","capybara::queries::selectorquery#name()","capybara::node::element#native()","capybara::driver::base#needs_server?()","capybara::selenium::driver#needs_server?()","capybara::queries::basequery#negative_failure_message()","capybara::queries::currentpathquery#negative_failure_message()","capybara::queries::textquery#negative_failure_message()","capybara::queries::titlequery#negative_failure_message()","capybara::result#negative_failure_message()","capybara::config::new()","capybara::configuredeprecator::new()","capybara::driver::node::new()","capybara::node::base::new()","capybara::node::element::new()","capybara::node::simple::new()","capybara::queries::basequery::new()","capybara::queries::currentpathquery::new()","capybara::queries::selectorquery::new()","capybara::queries::textquery::new()","capybara::queries::titlequery::new()","capybara::rspecmatchers::becomeclosed::new()","capybara::rspecmatchers::compound::capybaraevaluator::new()","capybara::rspecmatchers::havecurrentpath::new()","capybara::rspecmatchers::haveselector::new()","capybara::rspecmatchers::havetext::new()","capybara::rspecmatchers::havetitle::new()","capybara::racktest::browser::new()","capybara::racktest::driver::new()","capybara::racktest::form::niluploadedfile::new()","capybara::result::new()","capybara::selector::new()","capybara::selector::filterset::new()","capybara::selector::filters::base::new()","capybara::selector::filters::identityexpressionfilter::new()","capybara::selenium::driver::new()","capybara::server::new()","capybara::server::middleware::new()","capybara::server::middleware::counter::new()","capybara::session::new()","capybara::window::new()","testapp::testappothererror::new()","capybara::driver::base#no_such_window_error()","capybara::selenium::driver#no_such_window_error()","capybara::queries::selectorquery#node_filters()","capybara::selector#node_filters()","capybara::selector::filterset#node_filters()","capybara::helpers#normalize_whitespace()","capybara::node::matchers#not_matches_css?()","capybara::node::matchers#not_matches_selector?()","capybara::node::matchers#not_matches_xpath?()","capybara::session#open_file()","capybara::driver::base#open_new_window()","capybara::selenium::driver#open_new_window()","capybara::session#open_new_window()","capybara::racktest::browser#options()","capybara::rspecmatchers::compound#or()","capybara::racktest::form::niluploadedfile#original_filename()","capybara::dsl#page()","capybara::racktest::form#params()","capybara::node::base#parent()","capybara::driver::node#path()","capybara::node::element#path()","capybara::node::simple#path()","capybara::racktest::form::niluploadedfile#path()","capybara::racktest::node#path()","capybara::selenium::node#path()","capybara::server#pending_requests?()","capybara::server::middleware#pending_requests?()","capybara::server#port_key()","capybara::server::ports()","capybara::racktest::driver#post()","capybara::session#prepare_path()","capybara::racktest::browser#process()","capybara::racktest::browser#process_and_follow_redirects()","capybara::racktest::driver#put()","capybara::rspecmatchers::haveselector#query()","capybara::rspecmatchers::matchselector#query()","capybara::spechelper#quietly()","capybara::selenium::driver#quit()","capybara::racktest::node#radio?()","capybara::session#raise_server_error!()","capybara::window#raise_unless_current()","capybara::racktest::form::niluploadedfile#read()","capybara::driver::node#readonly?()","capybara::node::element#readonly?()","capybara::selenium::node#readonly?()","capybara::racktest::driver#redirect_limit()","capybara::driver::base#refresh()","capybara::racktest::browser#refresh()","capybara::racktest::driver#refresh()","capybara::selenium::driver#refresh()","capybara::session#refresh()","capybara::node::matchers#refute_matches_selector()","capybara::node::matchers#refute_selector()","capybara::register_driver()","capybara::register_server()","capybara::node::base#reload()","capybara::node::element#reload()","capybara::selector::remove()","capybara::selector::filterset::remove()","capybara::racktest::driver#request()","capybara::racktest::form#request_method()","capybara::racktest::browser#request_path()","capybara::rspecmatchers::compound::capybaraevaluator#reset()","capybara::reset!()","capybara::driver::base#reset!()","capybara::racktest::driver#reset!()","capybara::selenium::driver#reset!()","capybara::session#reset!()","capybara::spechelper::reset!()","capybara::racktest::browser#reset_cache!()","capybara::server#reset_error!()","capybara::racktest::browser#reset_host!()","capybara::session#reset_session!()","capybara::reset_sessions!()","capybara::spechelper::reset_threadsafe()","capybara::window#resize_to()","capybara::driver::base#resize_window_to()","capybara::selenium::driver#resize_window_to()","capybara::queries::ancestorquery#resolve_for()","capybara::queries::selectorquery#resolve_for()","capybara::queries::siblingquery#resolve_for()","capybara::queries::textquery#resolve_for()","capybara::queries::currentpathquery#resolves_for?()","capybara::queries::titlequery#resolves_for?()","capybara::configuredeprecator#respond_to_missing?()","capybara::racktest::driver#response()","capybara::driver::base#response_headers()","capybara::racktest::driver#response_headers()","capybara::session#response_headers()","capybara::server#responsive?()","capybara::result#rest()","capybara::config#reuse_server=()","capybara::driver::node#right_click()","capybara::node::element#right_click()","capybara::selenium::node#right_click()","capybara::spechelper#rspec2?()","capybara::run_default_server()","capybara::spechelper::run_specs()","capybara::session#save_and_open_page()","capybara::sessionconfig#save_and_open_page_path=()","capybara::session#save_and_open_screenshot()","capybara::session#save_page()","capybara::driver::base#save_screenshot()","capybara::selenium::driver#save_screenshot()","capybara::session#save_screenshot()","capybara::session#scopes()","capybara::node::actions#select()","capybara::racktest::node#select_node()","capybara::selenium::node#select_node()","capybara::driver::node#select_option()","capybara::node::element#select_option()","capybara::racktest::node#select_option()","capybara::selenium::node#select_option()","capybara::driver::node#selected?()","capybara::node::element#selected?()","capybara::node::simple#selected?()","capybara::racktest::node#selected?()","capybara::selenium::node#selected?()","capybara::driver::node#send_keys()","capybara::node::element#send_keys()","capybara::selenium::node#send_keys()","capybara::config#server()","capybara::config#server=()","capybara::sessionconfig#server_errors=()","capybara::sessionconfig#server_host()","capybara::servers()","capybara::session_name()","capybara::session_name=()","capybara::session_options()","capybara::driver::base#session_options()","capybara::node::base#session_options()","capybara::node::simple#session_options()","capybara::queries::basequery#session_options()","capybara::rspecmatchers::matcher#session_options()","capybara::session_pool()","capybara::rspecmatchers::matcher#session_query_args()","capybara::driver::node#set()","capybara::node::element#set()","capybara::racktest::node#set()","capybara::selenium::node#set()","capybara::racktest::node#set_checkbox()","capybara::racktest::node#set_input()","capybara::racktest::node#set_radio()","capybara::selenium::node#set_text()","object#should_be_on()","capybara::node::finders#sibling()","capybara::spechelper#silence_stream()","capybara::selenium::driver#silenced_unknown_error_message?()","capybara::selenium::driver#silenced_unknown_error_messages()","capybara::racktest::form::niluploadedfile#size()","capybara::window#size()","capybara::selector::filters::base#skip?()","capybara::session#source()","capybara::spechelper::spec()","capybara::driver::base#status_code()","capybara::racktest::driver#status_code()","capybara::session#status_code()","capybara::string()","capybara::racktest::node#string_node()","capybara::racktest::browser#submit()","capybara::racktest::driver#submit()","capybara::racktest::form#submit()","capybara::queries::selectorquery#supports_exact?()","capybara::driver::base#switch_to_frame()","capybara::selenium::driver#switch_to_frame()","capybara::session#switch_to_frame()","capybara::driver::base#switch_to_window()","capybara::selenium::driver#switch_to_window()","capybara::session#switch_to_window()","capybara::rspecmatchers::compound::and#sync_element()","capybara::rspecmatchers::compound::or#sync_element()","capybara::node::finders#synced_resolve()","capybara::node::base#synchronize()","capybara::node::simple#synchronize()","capybara::driver::node#tag_name()","capybara::node::element#tag_name()","capybara::node::simple#tag_name()","capybara::racktest::node#tag_name()","capybara::selenium::node#tag_name()","capybara::node::document#text()","capybara::node::element#text()","capybara::node::simple#text()","capybara::queries::textquery#text()","capybara::racktest::node#text_or_password?()","capybara::racktest::node#textarea?()","capybara::config#threadsafe=()","capybara::node::document#title()","capybara::node::simple#title()","capybara::racktest::browser#title()","capybara::racktest::driver#title()","capybara::selenium::driver#title()","capybara::racktest::form::paramshash#to_params_hash()","capybara::helpers#to_regexp()","capybara::driver::node#trigger()","capybara::node::element#trigger()","capybara::racktest::node#type()","capybara::node::actions#uncheck()","capybara::racktest::node#unnormalized_text()","capybara::node::actions#unselect()","capybara::driver::node#unselect_option()","capybara::node::element#unselect_option()","capybara::racktest::node#unselect_option()","capybara::selenium::node#unselect_option()","capybara::selenium::driver#unwrap_script_result()","capybara::selector::update()","capybara::use_default_driver()","capybara::using_driver()","capybara::using_session()","capybara::dsl#using_session()","capybara::using_wait_time()","capybara::dsl#using_wait_time()","capybara::session#using_wait_time()","capybara::queries::currentpathquery#valid_keys()","capybara::queries::matchquery#valid_keys()","capybara::queries::selectorquery#valid_keys()","capybara::queries::textquery#valid_keys()","capybara::queries::titlequery#valid_keys()","capybara::selector::filters::base#valid_value?()","capybara::driver::node#value()","capybara::node::element#value()","capybara::node::simple#value()","capybara::racktest::node#value()","capybara::selenium::node#value()","capybara::queries::matchquery#visible()","capybara::queries::selectorquery#visible()","capybara::selector#visible()","capybara::driver::node#visible?()","capybara::node::element#visible?()","capybara::node::simple#visible?()","capybara::racktest::node#visible?()","capybara::selenium::node#visible?()","capybara::driver::node#visible_text()","capybara::racktest::node#visible_text()","capybara::selenium::node#visible_text()","capybara::driver::base#visit()","capybara::racktest::browser#visit()","capybara::racktest::driver#visit()","capybara::selenium::driver#visit()","capybara::session#visit()","object#visit_host_links()","capybara::queries::basequery#wait()","capybara::queries::basequery::wait()","capybara::driver::base#wait?()","capybara::selenium::driver#wait?()","capybara::server#wait_for_pending_requests()","capybara::window#wait_for_stable_size()","capybara::queries::selectorquery#warn_exact_usage()","xpath::renderer#where()","object#win_size()","capybara::driver::base#window_handles()","capybara::selenium::driver#window_handles()","capybara::session#window_opened_by()","capybara::driver::base#window_size()","capybara::selenium::driver#window_size()","capybara::session#windows()","capybara::rspecmatcherproxies#within()","capybara::session#within()","capybara::session#within_element()","capybara::session#within_fieldset()","capybara::session#within_frame()","capybara::selenium::driver#within_given_window()","capybara::session#within_table()","capybara::driver::base#within_window()","capybara::selenium::driver#within_window()","capybara::session#within_window()","capybara::rspecmatchers::matcher#wrap()","capybara::rspecmatchers::matcher#wrap_does_not_match?()","capybara::rspecmatchers::matcher#wrap_matches?()","capybara::queries::selectorquery#xpath()","capybara::selector#xpath()","","","","","","",""],"info":[["ActionController","","ActionController.html","",""],["Addressable","","Addressable.html","",""],["Capybara","","Capybara.html","",""],["Capybara::Ambiguous","","Capybara/Ambiguous.html","",""],["Capybara::CapybaraError","","Capybara/CapybaraError.html","",""],["Capybara::Config","","Capybara/Config.html","",""],["Capybara::ConfigureDeprecator","","Capybara/ConfigureDeprecator.html","","<p>@api private\n"],["Capybara::DSL","","Capybara/DSL.html","",""],["Capybara::DSL::Session","","Capybara/DSL/Session.html","",""],["Capybara::Driver","","Capybara/Driver.html","",""],["Capybara::Driver::Base","","Capybara/Driver/Base.html","",""],["Capybara::Driver::Node","","Capybara/Driver/Node.html","",""],["Capybara::DriverNotFoundError","","Capybara/DriverNotFoundError.html","",""],["Capybara::ElementNotFound","","Capybara/ElementNotFound.html","",""],["Capybara::ExpectationNotMet","","Capybara/ExpectationNotMet.html","",""],["Capybara::Features","","Capybara/Features.html","",""],["Capybara::FileNotFound","","Capybara/FileNotFound.html","",""],["Capybara::FrozenInTime","","Capybara/FrozenInTime.html","",""],["Capybara::Helpers","","Capybara/Helpers.html","","<p>@api private\n"],["Capybara::Helpers::Process","","Capybara/Helpers/Process.html","",""],["Capybara::InfiniteRedirectError","","Capybara/InfiniteRedirectError.html","",""],["Capybara::Minitest","","Capybara/Minitest.html","",""],["Capybara::Minitest::Assertions","","Capybara/Minitest/Assertions.html","",""],["Capybara::Minitest::Expectations","","Capybara/Minitest/Expectations.html","",""],["Capybara::ModalNotFound","","Capybara/ModalNotFound.html","",""],["Capybara::Node","","Capybara/Node.html","",""],["Capybara::Node::Actions","","Capybara/Node/Actions.html","",""],["Capybara::Node::Base","","Capybara/Node/Base.html","","<p>A {Capybara::Node::Base} represents either an element on a page through the\nsubclass {Capybara::Node::Element} …\n"],["Capybara::Node::Document","","Capybara/Node/Document.html","","<p>A {Capybara::Document} represents an HTML document. Any operation performed\non it will be performed on …\n"],["Capybara::Node::DocumentMatchers","","Capybara/Node/DocumentMatchers.html","",""],["Capybara::Node::Element","","Capybara/Node/Element.html","","<p>A {Capybara::Node::Element} represents a single element on the page. It is\npossible to interact with …\n"],["Capybara::Node::Finders","","Capybara/Node/Finders.html","",""],["Capybara::Node::Matchers","","Capybara/Node/Matchers.html","",""],["Capybara::Node::Simple","","Capybara/Node/Simple.html","","<p>A {Capybara::Node::Simple} is a simpler version of {Capybara::Node::Base}\nwhich includes only {Capybara::Node::Finders} …\n"],["Capybara::NotSupportedByDriverError","","Capybara/NotSupportedByDriverError.html","",""],["Capybara::Queries","","Capybara/Queries.html","","<p>@api private\n<p>@api private\n<p>@api private\n"],["Capybara::Queries::AncestorQuery","","Capybara/Queries/AncestorQuery.html","",""],["Capybara::Queries::BaseQuery","","Capybara/Queries/BaseQuery.html","",""],["Capybara::Queries::CurrentPathQuery","","Capybara/Queries/CurrentPathQuery.html","",""],["Capybara::Queries::MatchQuery","","Capybara/Queries/MatchQuery.html","",""],["Capybara::Queries::SelectorQuery","","Capybara/Queries/SelectorQuery.html","",""],["Capybara::Queries::SiblingQuery","","Capybara/Queries/SiblingQuery.html","",""],["Capybara::Queries::TextQuery","","Capybara/Queries/TextQuery.html","",""],["Capybara::Queries::TitleQuery","","Capybara/Queries/TitleQuery.html","",""],["Capybara::RSpecMatcherProxies","","Capybara/RSpecMatcherProxies.html","",""],["Capybara::RSpecMatchers","","Capybara/RSpecMatchers.html","",""],["Capybara::RSpecMatchers::BecomeClosed","","Capybara/RSpecMatchers/BecomeClosed.html","",""],["Capybara::RSpecMatchers::Compound","","Capybara/RSpecMatchers/Compound.html","",""],["Capybara::RSpecMatchers::Compound::And","","Capybara/RSpecMatchers/Compound/And.html","",""],["Capybara::RSpecMatchers::Compound::CapybaraEvaluator","","Capybara/RSpecMatchers/Compound/CapybaraEvaluator.html","",""],["Capybara::RSpecMatchers::Compound::Or","","Capybara/RSpecMatchers/Compound/Or.html","",""],["Capybara::RSpecMatchers::HaveCurrentPath","","Capybara/RSpecMatchers/HaveCurrentPath.html","",""],["Capybara::RSpecMatchers::HaveSelector","","Capybara/RSpecMatchers/HaveSelector.html","",""],["Capybara::RSpecMatchers::HaveText","","Capybara/RSpecMatchers/HaveText.html","",""],["Capybara::RSpecMatchers::HaveTitle","","Capybara/RSpecMatchers/HaveTitle.html","",""],["Capybara::RSpecMatchers::MatchSelector","","Capybara/RSpecMatchers/MatchSelector.html","",""],["Capybara::RSpecMatchers::Matcher","","Capybara/RSpecMatchers/Matcher.html","",""],["Capybara::RackTest","","Capybara/RackTest.html","",""],["Capybara::RackTest::Browser","","Capybara/RackTest/Browser.html","",""],["Capybara::RackTest::CSSHandlers","","Capybara/RackTest/CSSHandlers.html","",""],["Capybara::RackTest::Driver","","Capybara/RackTest/Driver.html","",""],["Capybara::RackTest::Form","","Capybara/RackTest/Form.html","",""],["Capybara::RackTest::Form::NilUploadedFile","","Capybara/RackTest/Form/NilUploadedFile.html","","<p>This only needs to inherit from Rack::Test::UploadedFile because Rack::Test\nchecks for the class specifically …\n"],["Capybara::RackTest::Form::ParamsHash","","Capybara/RackTest/Form/ParamsHash.html","",""],["Capybara::RackTest::Node","","Capybara/RackTest/Node.html","",""],["Capybara::ReadOnlyElementError","","Capybara/ReadOnlyElementError.html","",""],["Capybara::ReadOnlySessionConfig","","Capybara/ReadOnlySessionConfig.html","",""],["Capybara::Result","","Capybara/Result.html","","<p>A {Capybara::Result} represents a collection of {Capybara::Node::Element}\non the page. It is possible …\n"],["Capybara::ScopeError","","Capybara/ScopeError.html","",""],["Capybara::Selector","","Capybara/Selector.html","",""],["Capybara::Selector::CSS","","Capybara/Selector/CSS.html","",""],["Capybara::Selector::FilterSet","","Capybara/Selector/FilterSet.html","",""],["Capybara::Selector::Filters","","Capybara/Selector/Filters.html","",""],["Capybara::Selector::Filters::Base","","Capybara/Selector/Filters/Base.html","",""],["Capybara::Selector::Filters::ExpressionFilter","","Capybara/Selector/Filters/ExpressionFilter.html","",""],["Capybara::Selector::Filters::IdentityExpressionFilter","","Capybara/Selector/Filters/IdentityExpressionFilter.html","",""],["Capybara::Selector::Filters::NodeFilter","","Capybara/Selector/Filters/NodeFilter.html","",""],["Capybara::Selenium","","Capybara/Selenium.html","",""],["Capybara::Selenium::Driver","","Capybara/Selenium/Driver.html","",""],["Capybara::Selenium::Node","","Capybara/Selenium/Node.html","",""],["Capybara::Server","","Capybara/Server.html","",""],["Capybara::Server::Middleware","","Capybara/Server/Middleware.html","",""],["Capybara::Server::Middleware::Counter","","Capybara/Server/Middleware/Counter.html","",""],["Capybara::Session","","Capybara/Session.html","","<p>The Session class represents a single user&#39;s interaction with the\nsystem. The Session can use any …\n"],["Capybara::SessionConfig","","Capybara/SessionConfig.html","",""],["Capybara::SessionMatchers","","Capybara/SessionMatchers.html","",""],["Capybara::SpecHelper","","Capybara/SpecHelper.html","",""],["Capybara::UnselectNotAllowed","","Capybara/UnselectNotAllowed.html","",""],["Capybara::Window","","Capybara/Window.html","","<p>The Window class represents a browser window.\n<p>You can get an instance of the class by calling either of: …\n"],["Capybara::WindowError","","Capybara/WindowError.html","",""],["Gem","","Gem.html","",""],["Object","","Object.html","",""],["Process","","Process.html","",""],["RSpec","","RSpec.html","",""],["RSpec::Core","","RSpec/Core.html","",""],["RSpec::Core::Version","","RSpec/Core/Version.html","",""],["RSpec::Expectations","","RSpec/Expectations.html","",""],["RSpec::Expectations::Version","","RSpec/Expectations/Version.html","",""],["RSpec::Matchers","","RSpec/Matchers.html","",""],["Rack","","Rack.html","",""],["Rack::Handler","","Rack/Handler.html","",""],["Rails","","Rails.html","",""],["Selenium","","Selenium.html","",""],["Selenium::WebDriver","","Selenium/WebDriver.html","",""],["Selenium::WebDriver::Chrome","","Selenium/WebDriver/Chrome.html","",""],["TestApp","","TestApp.html","",""],["TestApp::TestAppError","","TestApp/TestAppError.html","",""],["TestApp::TestAppOtherError","","TestApp/TestAppOtherError.html","",""],["WEBrick","","WEBrick.html","",""],["WEBrick::Log","","WEBrick/Log.html","",""],["XPath","","XPath.html","","<p>Patch XPath to allow a nil condition in where\n"],["XPath::Renderer","","XPath/Renderer.html","",""],["==","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-3D-3D","(other)",""],["==","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-3D-3D","(other)",""],["==","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-3D-3D","(other)",""],["==","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-3D-3D","(other)",""],["==","Capybara::Window","Capybara/Window.html#method-i-3D-3D","(other)",""],["HTML","Capybara","Capybara.html#method-c-HTML","(html)","<p>Parse raw html into a document using Nokogiri, and adjust textarea contents\nas defined by the spec.\n<p>@param …\n"],["[]","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-5B-5D","(name)",""],["[]","Capybara::Node::Element","Capybara/Node/Element.html#method-i-5B-5D","(attribute)","<p>Retrieve the given attribute\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">element</span>[:<span class=\"ruby-identifier\">title</span>] <span class=\"ruby-comment\"># =&gt; HTML title attribute</span>\n</pre>\n<p>@param  [Symbol] attribute      …\n"],["[]","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-5B-5D","(name)","<p>Retrieve the given attribute\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">element</span>[:<span class=\"ruby-identifier\">title</span>] <span class=\"ruby-comment\"># =&gt; HTML title attribute</span>\n</pre>\n<p>@param  [Symbol] name  The attribute …\n"],["[]","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-5B-5D","(name)",""],["[]","Capybara::Result","Capybara/Result.html#method-i-5B-5D","(*args)",""],["[]","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-5B-5D","(name)",""],["_check_with_label","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-_check_with_label","(selector, checked, locator, options)",""],["_find_frame","Capybara::Session","Capybara/Session.html#method-i-_find_frame","(*args)",""],["_reset_style","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-_reset_style","(element)",""],["_set_query_session_options","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-_set_query_session_options","(query_args)",""],["_switch_to_window","Capybara::Session","Capybara/Session.html#method-i-_switch_to_window","(window = nil, options= {})",""],["_update_style","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-_update_style","(element, style)",""],["_verify_current_path","Capybara::SessionMatchers","Capybara/SessionMatchers.html#method-i-_verify_current_path","(path, options)",""],["_verify_match_result","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-_verify_match_result","(query_args, optional_filter_block, &result_block)",""],["_verify_selector_result","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-_verify_selector_result","(query_args, optional_filter_block, &result_block)",""],["_verify_text","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-_verify_text","(query_args)",""],["_verify_title","Capybara::Node::DocumentMatchers","Capybara/Node/DocumentMatchers.html#method-i-_verify_title","(title, options)",""],["accept_alert","Capybara::Session","Capybara/Session.html#method-i-accept_alert","(text_or_options=nil, options={}, &blk)","<p>Execute the block, accepting a alert.\n<p>@!macro modal_params\n\n<pre>Expects a block whose actions will trigger the ...</pre>\n"],["accept_confirm","Capybara::Session","Capybara/Session.html#method-i-accept_confirm","(text_or_options=nil, options={}, &blk)","<p>Execute the block, accepting a confirm.\n<p>@macro modal_params\n"],["accept_modal","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-accept_modal","(type, options={}, &blk)","<p>Execute the block, and then accept the modal opened. @param type [:alert,\n:confirm, :prompt] @option …\n"],["accept_modal","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-accept_modal","(_type, options={})",""],["accept_modal","Capybara::Session","Capybara/Session.html#method-i-accept_modal","(type, text_or_options, options, &blk)",""],["accept_prompt","Capybara::Session","Capybara/Session.html#method-i-accept_prompt","(text_or_options=nil, options={}, &blk)","<p>Execute the block, accepting a prompt, optionally responding to the prompt.\n<p>@macro modal_params @option …\n"],["add","Capybara::Selector","Capybara/Selector.html#method-c-add","(name, &block)",""],["add","Capybara::Selector::FilterSet","Capybara/Selector/FilterSet.html#method-c-add","(name, &block)",""],["add_filter","Capybara::Selector::FilterSet","Capybara/Selector/FilterSet.html#method-i-add_filter","(name, filter_class, *types_and_options, &block)",""],["add_selector","Capybara","Capybara.html#method-c-add_selector","(name, &block)","<p>Add a new selector to Capybara. Selectors can be used by various methods in\nCapybara to find certain …\n"],["all","Capybara::Node::Finders","Capybara/Node/Finders.html#method-i-all","(*args, &optional_filter_block)","<p>@!method all([kind = Capybara.default_selector], locator = nil, options =\n{})\n<p>Find all elements on the …\n"],["all","Capybara::RSpecMatcherProxies","Capybara/RSpecMatcherProxies.html#method-i-all","(*args)",""],["all","Capybara::Selector","Capybara/Selector.html#method-c-all","()",""],["all","Capybara::Selector::FilterSet","Capybara/Selector/FilterSet.html#method-c-all","()",""],["all_text","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-all_text","()",""],["all_text","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-all_text","()",""],["all_text","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-all_text","()",""],["allow_reload!","Capybara::Node::Element","Capybara/Node/Element.html#method-i-allow_reload-21","()",""],["allow_reload!","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-allow_reload-21","()",""],["ancestor","Capybara::Node::Finders","Capybara/Node/Finders.html#method-i-ancestor","(*args, &optional_filter_block)","<p>Find an {Capybara::Node::Element} based on the given arguments that is also\nan ancestor of the element …\n"],["and","Capybara::RSpecMatchers::Compound","Capybara/RSpecMatchers/Compound.html#method-i-and","(matcher)",""],["and_then","Capybara::RSpecMatchers::Compound","Capybara/RSpecMatchers/Compound.html#method-i-and_then","(matcher)",""],["app","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-app","()",""],["app_host=","Capybara::SessionConfig","Capybara/SessionConfig.html#method-i-app_host-3D","(url)",""],["apply_expression_filters","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-apply_expression_filters","(expr)",""],["apply_filter","Capybara::Selector::Filters::ExpressionFilter","Capybara/Selector/Filters/ExpressionFilter.html#method-i-apply_filter","(expr, value)",""],["apply_filter","Capybara::Selector::Filters::IdentityExpressionFilter","Capybara/Selector/Filters/IdentityExpressionFilter.html#method-i-apply_filter","(expr, _value)",""],["assert_all_of_selectors","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-assert_all_of_selectors","(*args, &optional_filter_block)","<p>Asserts that all of the provided selectors are present on the given page or\ndescendants of the current …\n"],["assert_current_path","Capybara::SessionMatchers","Capybara/SessionMatchers.html#method-i-assert_current_path","(path, options={})","<p>Asserts that the page has the given path. By default, if passed a full url\nthis will compare against …\n"],["assert_matches_selector","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-assert_matches_selector","(*args, &optional_filter_block)","<p>Asserts that the current_node matches a given selector\n\n<pre>node.assert_matches_selector(&#39;p#foo&#39;)\nnode.assert_matches_selector(:xpath, ...</pre>\n"],["assert_no_current_path","Capybara::SessionMatchers","Capybara/SessionMatchers.html#method-i-assert_no_current_path","(path, options={})","<p>Asserts that the page doesn&#39;t have the given path. By default, if\npassed a full url this will compare …\n"],["assert_no_selector","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-assert_no_selector","(*args, &optional_filter_block)","<p>Asserts that a given selector is not on the page or a descendant of the\ncurrent node. Usage is identical …\n"],["assert_no_text","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-assert_no_text","(*args)","<p>Asserts that the page or current node doesn&#39;t have the given text\ncontent, ignoring any HTML tags. …\n"],["assert_no_title","Capybara::Node::DocumentMatchers","Capybara/Node/DocumentMatchers.html#method-i-assert_no_title","(title, options = {})","<p>Asserts that the page doesn&#39;t have the given title.\n<p>@macro title_query_params @raise [Capybara::ExpectationNotMet] …\n"],["assert_none_of_selectors","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-assert_none_of_selectors","(*args, &optional_filter_block)","<p>Asserts that none of the provided selectors are present on the given page\nor descendants of the current …\n"],["assert_not_matches_selector","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-assert_not_matches_selector","(*args, &optional_filter_block)",""],["assert_selector","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-assert_selector","(*args, &optional_filter_block)","<p>Asserts that a given selector is on the page or a descendant of the current\nnode.\n\n<pre>page.assert_selector(&#39;p#foo&#39;) ...</pre>\n"],["assert_text","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-assert_text","(*args)","<p>Asserts that the page or current node has the given text content, ignoring\nany HTML tags.\n<p>@!macro text_query_params …\n"],["assert_title","Capybara::Node::DocumentMatchers","Capybara/Node/DocumentMatchers.html#method-i-assert_title","(title, options = {})","<p>Asserts that the page has the given title.\n<p>@!macro title_query_params\n\n<pre>@overload $0(string, options = {}) ...</pre>\n"],["assert_valid_keys","Capybara::Queries::BaseQuery","Capybara/Queries/BaseQuery.html#method-i-assert_valid_keys","()",""],["assert_valid_keys","Capybara::Queries::CurrentPathQuery","Capybara/Queries/CurrentPathQuery.html#method-i-assert_valid_keys","()",""],["assert_valid_keys","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-assert_valid_keys","()",""],["at","Capybara::Result","Capybara/Result.html#method-i-at","(*args)",""],["attach_file","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-attach_file","(locator, path, options={})","<p>Find a file field on the page and attach a file given its path. The file\nfield can be found via its name, …\n"],["attribute_is_not_blank?","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-attribute_is_not_blank-3F","(attribute)",""],["bases","Object","Object.html#method-i-bases","()",""],["be_an_invalid_element_error","Object","Object.html#method-i-be_an_invalid_element_error","(session)",""],["become_closed","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-become_closed","(options = {})","<p>Wait for window to become closed. @example\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">expect</span>(<span class=\"ruby-identifier\">window</span>).<span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">become_closed</span>(<span class=\"ruby-identifier\">wait</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-value\">0.8</span>)\n</pre>\n<p>@param options [Hash] …\n"],["body","Capybara::Session","Capybara/Session.html#method-i-body","()",""],["boot","Capybara::Server","Capybara/Server.html#method-i-boot","()",""],["browser","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-browser","()",""],["browser","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-browser","()",""],["browser_initialized?","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-browser_initialized-3F","()","<p>@deprecated This method is being removed\n"],["browser_initialized?","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-browser_initialized-3F","()","<p>@deprecated This method is being removed\n"],["browser_initialized?","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-browser_initialized-3F","()","<p>@deprecated This method is being removed\n"],["browser_name","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-browser_name","()","<p>@api private\n"],["build_message","Capybara::Queries::TextQuery","Capybara/Queries/TextQuery.html#method-i-build_message","(report_on_invisible)",""],["build_rack_mock_session","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-build_rack_mock_session","()",""],["call","Capybara::Selector","Capybara/Selector.html#method-i-call","(locator, options={})",""],["call","Capybara::Server::Middleware","Capybara/Server/Middleware.html#method-i-call","(env)",""],["catch_error?","Capybara::Node::Base","Capybara/Node/Base.html#method-i-catch_error-3F","(error, errors = nil)",""],["check","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-check","(locator, options={})","<p>Find a check box and mark it as checked. The check box can be found via\nname, id or label text.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">page</span>.<span class=\"ruby-identifier\">check</span>(<span class=\"ruby-string\">&#39;German&#39;</span>)\n</pre>\n"],["check_visible_text?","Capybara::Queries::TextQuery","Capybara/Queries/TextQuery.html#method-i-check_visible_text-3F","()",""],["checkbox?","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-checkbox-3F","()",""],["checked?","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-checked-3F","()",""],["checked?","Capybara::Node::Element","Capybara/Node/Element.html#method-i-checked-3F","()","<p>Whether or not the element is checked.\n<p>@return [Boolean]     Whether the element is checked\n"],["checked?","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-checked-3F","()","<p>Whether or not the element is checked.\n<p>@return [Boolean]     Whether the element is checked\n"],["checked?","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-checked-3F","()",""],["checked?","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-checked-3F","()",""],["choose","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-choose","(locator, options={})","<p>Find a radio button and mark it as checked. The radio button can be found\nvia name, id or label text. …\n"],["chrome?","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-chrome-3F","()","<p>@api private\n"],["cleanup!","Capybara::Session","Capybara/Session.html#method-i-cleanup-21","()",""],["click","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-click","()",""],["click","Capybara::Node::Element","Capybara/Node/Element.html#method-i-click","()","<p>Click the Element\n<p>@return [Capybara::Node::Element]  The element\n"],["click","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-click","()",""],["click","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-click","()",""],["click_button","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-click_button","(locator=nil, options={})","<p>Finds a button on the page and clicks it. This can be any &lt;input&gt;\nelement of type submit, reset, …\n"],["click_link","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-click_link","(locator=nil, options={})","<p>Finds a link by id, text or title and clicks it. Also looks at image alt\ntext inside the link.\n<p>@macro …\n"],["click_link_or_button","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-click_link_or_button","(locator=nil, options={})","<p>Finds a button or link and clicks it.  See\n{Capybara::Node::Actions#click_button} and\n{Capybara::Node::Actions#click_link} …\n"],["click_on","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-click_on","(locator=nil, options={})",""],["close","Capybara::Window","Capybara/Window.html#method-i-close","()","<p>Close window.\n<p>If this method was called for window that is current, then after calling\nthis method\n\n<pre>future ...</pre>\n"],["close_window","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-close_window","(handle)",""],["close_window","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-close_window","(handle)",""],["closed?","Capybara::Window","Capybara/Window.html#method-i-closed-3F","()","<p>@return [Boolean] whether the window is closed\n"],["config","Capybara","Capybara.html#method-c-config","()",""],["config","Capybara::Session","Capybara/Session.html#method-i-config","()",""],["configure","Capybara","Capybara.html#method-c-configure","()","<p>Configure Capybara to suit your needs.\n\n<pre>Capybara.configure do |config|\n  config.run_server = false\n  config.app_host ...</pre>\n"],["configure","Capybara::Session","Capybara/Session.html#method-i-configure","()","<p>Accepts a block to set the configuration options if Capybara.threadsafe ==\ntrue. Note that some options …\n"],["configure","Capybara::SpecHelper","Capybara/SpecHelper.html#method-c-configure","(config)",""],["const_missing","Capybara::Selector","Capybara/Selector.html#method-c-const_missing","(const_name)",""],["content_editable?","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-content_editable-3F","()",""],["content_type","Capybara::RackTest::Form::NilUploadedFile","Capybara/RackTest/Form/NilUploadedFile.html#method-i-content_type","()",""],["count_message","Capybara::Queries::BaseQuery","Capybara/Queries/BaseQuery.html#method-i-count_message","()",""],["css","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-css","()",""],["css","Capybara::Selector","Capybara/Selector.html#method-i-css","(*expression_filters, &block)","<p>Define a selector by a CSS selector\n<p>@overload css(*expression_filters, &amp;block)\n\n<pre>@param [Array&lt;Symbol&gt;] ...</pre>\n"],["current?","Capybara::Window","Capybara/Window.html#method-i-current-3F","()","<p>@return [Boolean] whether this window is the window in which commands are\nbeing executed\n"],["current_driver","Capybara","Capybara.html#method-c-current_driver","()","<p>@return [Symbol]    The name of the driver currently in use\n"],["current_driver=","Capybara","Capybara.html#method-c-current_driver-3D","(name)",""],["current_host","Capybara::Session","Capybara/Session.html#method-i-current_host","()","<p>@return [String] Host of the current page\n"],["current_path","Capybara::Session","Capybara/Session.html#method-i-current_path","()","<p>@return [String] Path of the current page, without any domain information\n"],["current_scope","Capybara::Session","Capybara/Session.html#method-i-current_scope","()",""],["current_session","Capybara","Capybara.html#method-c-current_session","()","<p>The current Capybara::Session based on what is set as Capybara.app and\nCapybara.current_driver\n<p>@return …\n"],["current_url","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-current_url","()",""],["current_url","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-current_url","()",""],["current_url","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-current_url","()",""],["current_url","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-current_url","()",""],["current_url","Capybara::Session","Capybara/Session.html#method-i-current_url","()","<p>@return [String] Fully qualified URL of the current page\n"],["current_window","Capybara::Session","Capybara/Session.html#method-i-current_window","()","<p>@return [Capybara::Window]   current window\n"],["current_window_handle","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-current_window_handle","()",""],["current_window_handle","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-current_window_handle","()",""],["custom_filters","Capybara::Selector","Capybara/Selector.html#method-i-custom_filters","()",""],["custom_keys","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-custom_keys","()",""],["declension","Capybara::Helpers","Capybara/Helpers.html#method-i-declension","(singular, plural, count)","<p>A poor man&#39;s `pluralize`. Given two declensions, one singular and one\nplural, as well as a count, …\n"],["decrement","Capybara::Server::Middleware::Counter","Capybara/Server/Middleware/Counter.html#method-i-decrement","()",""],["default","Capybara::Selector::Filters::Base","Capybara/Selector/Filters/Base.html#method-i-default","()",""],["default?","Capybara::Selector::Filters::Base","Capybara/Selector/Filters/Base.html#method-i-default-3F","()",""],["default?","Capybara::Selector::Filters::IdentityExpressionFilter","Capybara/Selector/Filters/IdentityExpressionFilter.html#method-i-default-3F","()",""],["default_driver","Capybara::Config","Capybara/Config.html#method-i-default_driver","()","<p>@return [Symbol]    The name of the driver to use by default\n"],["default_fn","Capybara::Session","Capybara/Session.html#method-i-default_fn","(extension)",""],["default_host=","Capybara::SessionConfig","Capybara/SessionConfig.html#method-i-default_host-3D","(url)",""],["default_visibility","Capybara::Selector","Capybara/Selector.html#method-i-default_visibility","(fallback = Capybara.ignore_hidden_elements)",""],["default_wait_time","Capybara::Config","Capybara/Config.html#method-i-default_wait_time","()","<p>@deprecated Use default_max_wait_time instead\n"],["default_wait_time=","Capybara::Config","Capybara/Config.html#method-i-default_wait_time-3D","(t)","<p>@deprecated Use default_max_wait_time= instead\n"],["delete","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-delete","(*args, &block)",""],["deprecate","Capybara::Config","Capybara/Config.html#method-i-deprecate","(method, alternate_method, once=false)",""],["describe","Capybara::Selector","Capybara/Selector.html#method-i-describe","(&block)",""],["describe","Capybara::Selector::FilterSet","Capybara/Selector/FilterSet.html#method-i-describe","(&block)",""],["describe_all_expression_filters","Capybara::Selector","Capybara/Selector.html#method-i-describe_all_expression_filters","(opts={})",""],["describe_within?","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-describe_within-3F","()",""],["description","Capybara::Queries::AncestorQuery","Capybara/Queries/AncestorQuery.html#method-i-description","()",""],["description","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-description","()",""],["description","Capybara::Queries::SiblingQuery","Capybara/Queries/SiblingQuery.html#method-i-description","()",""],["description","Capybara::Queries::TextQuery","Capybara/Queries/TextQuery.html#method-i-description","()",""],["description","Capybara::RSpecMatchers::HaveCurrentPath","Capybara/RSpecMatchers/HaveCurrentPath.html#method-i-description","()",""],["description","Capybara::RSpecMatchers::HaveSelector","Capybara/RSpecMatchers/HaveSelector.html#method-i-description","()",""],["description","Capybara::RSpecMatchers::HaveText","Capybara/RSpecMatchers/HaveText.html#method-i-description","()",""],["description","Capybara::RSpecMatchers::HaveTitle","Capybara/RSpecMatchers/HaveTitle.html#method-i-description","()",""],["description","Capybara::RSpecMatchers::MatchSelector","Capybara/RSpecMatchers/MatchSelector.html#method-i-description","()",""],["description","Capybara::Selector","Capybara/Selector.html#method-i-description","(options={})","<p>Description of the selector\n<p>@param [Hash] options            The options of the query used to generate\n…\n"],["description","Capybara::Selector::FilterSet","Capybara/Selector/FilterSet.html#method-i-description","(options={})",""],["determine_subject","Capybara::Minitest::Assertions","Capybara/Minitest/Assertions.html#method-i-determine_subject","(args)","<p>Assertion that there is no table\n<p>@!method refute_table @!method assert_no_table\n\n<pre>see {Capybara::Node::Matchers#has_no_table?}</pre>\n"],["disabled","Capybara::RackTest::CSSHandlers","Capybara/RackTest/CSSHandlers.html#method-i-disabled","(list)",""],["disabled?","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-disabled-3F","()",""],["disabled?","Capybara::Node::Element","Capybara/Node/Element.html#method-i-disabled-3F","()","<p>Whether or not the element is disabled.\n<p>@return [Boolean]     Whether the element is disabled\n"],["disabled?","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-disabled-3F","()","<p>Whether or not the element is disabled.\n<p>@return [Boolean]     Whether the element is disabled\n"],["disabled?","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-disabled-3F","()",""],["disabled?","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-disabled-3F","()",""],["dismiss_confirm","Capybara::Session","Capybara/Session.html#method-i-dismiss_confirm","(text_or_options=nil, options={}, &blk)","<p>Execute the block, dismissing a confirm.\n<p>@macro modal_params\n"],["dismiss_modal","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-dismiss_modal","(type, options={}, &blk)","<p>Execute the block, and then dismiss the modal opened. @param type [:alert,\n:confirm, :prompt] @option …\n"],["dismiss_modal","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-dismiss_modal","(_type, options={})",""],["dismiss_modal","Capybara::Session","Capybara/Session.html#method-i-dismiss_modal","(type, text_or_options, options, &blk)",""],["dismiss_prompt","Capybara::Session","Capybara/Session.html#method-i-dismiss_prompt","(text_or_options=nil, options={}, &blk)","<p>Execute the block, dismissing a prompt.\n<p>@macro modal_params\n"],["document","Capybara::Session","Capybara/Session.html#method-i-document","()",""],["does_not_match?","Capybara::RSpecMatchers::HaveCurrentPath","Capybara/RSpecMatchers/HaveCurrentPath.html#method-i-does_not_match-3F","(actual)",""],["does_not_match?","Capybara::RSpecMatchers::HaveSelector","Capybara/RSpecMatchers/HaveSelector.html#method-i-does_not_match-3F","(actual)",""],["does_not_match?","Capybara::RSpecMatchers::HaveText","Capybara/RSpecMatchers/HaveText.html#method-i-does_not_match-3F","(actual)",""],["does_not_match?","Capybara::RSpecMatchers::HaveTitle","Capybara/RSpecMatchers/HaveTitle.html#method-i-does_not_match-3F","(actual)",""],["does_not_match?","Capybara::RSpecMatchers::MatchSelector","Capybara/RSpecMatchers/MatchSelector.html#method-i-does_not_match-3F","(actual)",""],["dom","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-dom","()",""],["dom","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-dom","()",""],["double_click","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-double_click","()",""],["double_click","Capybara::Node::Element","Capybara/Node/Element.html#method-i-double_click","()","<p>Double Click the Element\n<p>@return [Capybara::Node::Element]  The element\n"],["double_click","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-double_click","()",""],["drag_to","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-drag_to","(element)",""],["drag_to","Capybara::Node::Element","Capybara/Node/Element.html#method-i-drag_to","(node)","<p>Drag the element to the given other element.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">source</span> = <span class=\"ruby-identifier\">page</span>.<span class=\"ruby-identifier\">find</span>(<span class=\"ruby-string\">&#39;#foo&#39;</span>)\n<span class=\"ruby-identifier\">target</span> = <span class=\"ruby-identifier\">page</span>.<span class=\"ruby-identifier\">find</span>(<span class=\"ruby-string\">&#39;#bar&#39;</span>)\n<span class=\"ruby-identifier\">source</span>.<span class=\"ruby-identifier\">drag_to</span>(<span class=\"ruby-identifier\">target</span>)\n</pre>\n"],["drag_to","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-drag_to","(element)",""],["driver","Capybara::Node::Base","Capybara/Node/Base.html#method-i-driver","()",""],["driver","Capybara::Session","Capybara/Session.html#method-i-driver","()",""],["drivers","Capybara","Capybara.html#method-c-drivers","()",""],["each","Capybara::Result","Capybara/Result.html#method-i-each","(&block)",""],["element_script_result","Capybara::Session","Capybara/Session.html#method-i-element_script_result","(arg)",""],["empty?","Capybara::Result","Capybara/Result.html#method-i-empty-3F","()",""],["enabled","Capybara::RackTest::CSSHandlers","Capybara/RackTest/CSSHandlers.html#method-i-enabled","(list)",""],["eql?","Capybara::Window","Capybara/Window.html#method-i-eql-3F","(other)",""],["error","Capybara::Server","Capybara/Server.html#method-i-error","()",""],["escape","Capybara::Selector::CSS","Capybara/Selector/CSS.html#method-c-escape","(str)",""],["escape_char","Capybara::Selector::CSS","Capybara/Selector/CSS.html#method-c-escape_char","(c)",""],["evaluate_async_script","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-evaluate_async_script","(script, *args)",""],["evaluate_async_script","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-evaluate_async_script","(script, *args)",""],["evaluate_async_script","Capybara::Session","Capybara/Session.html#method-i-evaluate_async_script","(script, *args)","<p>Evaluate the given JavaScript and obtain the result from a callback\nfunction which will be passed as …\n"],["evaluate_script","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-evaluate_script","(script, *args)",""],["evaluate_script","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-evaluate_script","(script, *args)",""],["evaluate_script","Capybara::Session","Capybara/Session.html#method-i-evaluate_script","(script, *args)","<p>Evaluate the given JavaScript and return the result. Be careful when using\nthis with scripts that return …\n"],["exact?","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-exact-3F","()",""],["exact?","Capybara::Queries::TextQuery","Capybara/Queries/TextQuery.html#method-i-exact-3F","()",""],["exact_text","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-exact_text","()",""],["execute_script","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-execute_script","(script, *args)",""],["execute_script","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-execute_script","(script, *args)",""],["execute_script","Capybara::Session","Capybara/Session.html#method-i-execute_script","(script, *args)","<p>Execute the given script, not returning a result. This is useful for\nscripts that return complex objects, …\n"],["exists?","Capybara::Window","Capybara/Window.html#method-i-exists-3F","()","<p>@return [Boolean] whether the window is not closed\n"],["expects_none?","Capybara::Queries::BaseQuery","Capybara/Queries/BaseQuery.html#method-i-expects_none-3F","()","<p>Checks if a count of 0 is valid for the query Returns false if query does\nnot have any count options …\n"],["expression_filter","Capybara::Selector","Capybara/Selector.html#method-i-expression_filter","(name, *types_and_options, &block)",""],["expression_filter","Capybara::Selector::FilterSet","Capybara/Selector/FilterSet.html#method-i-expression_filter","(name, *types_and_options, &block)",""],["expression_filters","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-expression_filters","()",""],["expression_filters","Capybara::Selector","Capybara/Selector.html#method-i-expression_filters","()",""],["expression_filters","Capybara::Selector::FilterSet","Capybara/Selector/FilterSet.html#method-i-expression_filters","()",""],["extended","Capybara::DSL","Capybara/DSL.html#method-c-extended","(base)",""],["extract_locator","Capybara::Minitest::Assertions","Capybara/Minitest/Assertions.html#method-i-extract_locator","(args)",""],["extract_results","Capybara::SpecHelper","Capybara/SpecHelper.html#method-i-extract_results","(session)",""],["failure_message","Capybara::Queries::BaseQuery","Capybara/Queries/BaseQuery.html#method-i-failure_message","()","<p>Generates a failure message from the query description and count options.\n"],["failure_message","Capybara::Queries::CurrentPathQuery","Capybara/Queries/CurrentPathQuery.html#method-i-failure_message","()",""],["failure_message","Capybara::Queries::TextQuery","Capybara/Queries/TextQuery.html#method-i-failure_message","()",""],["failure_message","Capybara::Queries::TitleQuery","Capybara/Queries/TitleQuery.html#method-i-failure_message","()",""],["failure_message","Capybara::RSpecMatchers::BecomeClosed","Capybara/RSpecMatchers/BecomeClosed.html#method-i-failure_message","()",""],["failure_message","Capybara::Result","Capybara/Result.html#method-i-failure_message","()",""],["failure_message_for_should","Capybara::RSpecMatchers::BecomeClosed","Capybara/RSpecMatchers/BecomeClosed.html#method-i-failure_message_for_should","()","<p>RSpec 2 compatibility:\n"],["failure_message_for_should","Capybara::RSpecMatchers::Matcher","Capybara/RSpecMatchers/Matcher.html#method-i-failure_message_for_should","()","<p>RSpec 2 compatibility:\n"],["failure_message_for_should_not","Capybara::RSpecMatchers::BecomeClosed","Capybara/RSpecMatchers/BecomeClosed.html#method-i-failure_message_for_should_not","()",""],["failure_message_for_should_not","Capybara::RSpecMatchers::Matcher","Capybara/RSpecMatchers/Matcher.html#method-i-failure_message_for_should_not","()",""],["failure_message_helper","Capybara::Queries::CurrentPathQuery","Capybara/Queries/CurrentPathQuery.html#method-i-failure_message_helper","(negated = '')",""],["failure_message_helper","Capybara::Queries::TitleQuery","Capybara/Queries/TitleQuery.html#method-i-failure_message_helper","(negated = '')",""],["failure_message_when_negated","Capybara::RSpecMatchers::BecomeClosed","Capybara/RSpecMatchers/BecomeClosed.html#method-i-failure_message_when_negated","()",""],["feature","Object","Object.html#method-c-feature","(*args, &block)",""],["field_labeled","Capybara::Node::Finders","Capybara/Node/Finders.html#method-i-field_labeled","(locator=nil, options={}, &optional_filter_block)",""],["fill_in","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-fill_in","(locator, options={})","<p>Locate a text field or text area and fill it in with the given text The\nfield can be found via its name, …\n"],["filter","Capybara::Selector","Capybara/Selector.html#method-i-filter","(name, *types_and_options, &block)","<p>Define a non-expression filter for use with this selector\n<p>@overload filter(name, *types, options={}, &amp;block) …\n"],["filter","Capybara::Selector::FilterSet","Capybara/Selector/FilterSet.html#method-i-filter","(name, *types_and_options, &block)",""],["filter","Capybara::SpecHelper","Capybara/SpecHelper.html#method-c-filter","(requires, metadata)",""],["filter_set","Capybara::Selector","Capybara/Selector.html#method-i-filter_set","(name, filters_to_use = nil)",""],["filtered_css","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-filtered_css","(expr)",""],["filtered_xpath","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-filtered_xpath","(expr)",""],["filters","Capybara::Selector::FilterSet","Capybara/Selector/FilterSet.html#method-i-filters","()",""],["find","Capybara::Node::Finders","Capybara/Node/Finders.html#method-i-find","(*args, &optional_filter_block)","<p>Find an {Capybara::Node::Element} based on the given arguments.\n<code>find</code> will raise an error if the element …\n"],["find","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-find","(format, selector)",""],["find_all","Capybara::Node::Finders","Capybara/Node/Finders.html#method-i-find_all","(*args, &optional_filter_block)",""],["find_available_port","Capybara::Server","Capybara/Server.html#method-i-find_available_port","(host)",""],["find_button","Capybara::Node::Finders","Capybara/Node/Finders.html#method-i-find_button","(locator=nil, options={}, &optional_filter_block)","<p>Find a button on the page. This can be any &lt;input&gt; element of type\nsubmit, reset, image, button …\n"],["find_by_attr","Capybara::Selector","Capybara/Selector.html#method-i-find_by_attr","(attribute, value)",""],["find_by_class_attr","Capybara::Selector","Capybara/Selector.html#method-i-find_by_class_attr","(classes)",""],["find_by_id","Capybara::Node::Finders","Capybara/Node/Finders.html#method-i-find_by_id","(id, options={}, &optional_filter_block)","<p>Find a element on the page, given its id.\n<p>@macro waiting_behavior\n<p>@param [String] id                  id …\n"],["find_css","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-find_css","(query)",""],["find_css","Capybara::Node::Base","Capybara/Node/Base.html#method-i-find_css","(css)","<p>@api private\n"],["find_css","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-find_css","(css)","<p>@api private\n"],["find_css","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-find_css","(selector)",""],["find_css","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-find_css","(locator)",""],["find_css","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-find_css","(selector)",""],["find_css","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-find_css","(locator)",""],["find_field","Capybara::Node::Finders","Capybara/Node/Finders.html#method-i-find_field","(locator=nil, options={}, &optional_filter_block)","<p>Find a form field on the page. The field can be found by its name, id or\nlabel text.\n<p>@overload find_field( …\n"],["find_headless_modal","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-find_headless_modal","(options={})",""],["find_link","Capybara::Node::Finders","Capybara/Node/Finders.html#method-i-find_link","(locator=nil, options={}, &optional_filter_block)","<p>Find a link on the page. The link can be found by its id or text.\n<p>@overload find_link(, options={})\n\n<pre>@param ...</pre>\n"],["find_modal","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-find_modal","(options={})",""],["find_window","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-find_window","(locator)",""],["find_xpath","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-find_xpath","(query)",""],["find_xpath","Capybara::Node::Base","Capybara/Node/Base.html#method-i-find_xpath","(xpath)","<p>@api private\n"],["find_xpath","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-find_xpath","(xpath)","<p>@api private\n"],["find_xpath","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-find_xpath","(selector)",""],["find_xpath","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-find_xpath","(locator)",""],["find_xpath","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-find_xpath","(selector)",""],["find_xpath","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-find_xpath","(locator)",""],["firefox?","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-firefox-3F","()","<p>@api private\n"],["first","Capybara::Node::Finders","Capybara/Node/Finders.html#method-i-first","(*args, &optional_filter_block)","<p>Find the first element on the page matching the given selector and options,\nor nil if no element matches. …\n"],["follow","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-follow","(method, path, attributes = {})",""],["follow","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-follow","(method, path, attributes = {})",""],["follow_redirects?","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-follow_redirects-3F","()",""],["form","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-form","()",""],["format","Capybara::RSpecMatchers::HaveText","Capybara/RSpecMatchers/HaveText.html#method-i-format","(content)",""],["full_results","Capybara::Result","Capybara/Result.html#method-i-full_results","()",""],["get","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-get","(*args, &block)",""],["go_back","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-go_back","()",""],["go_back","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-go_back","()",""],["go_back","Capybara::Session","Capybara/Session.html#method-i-go_back","()","<p>Move back a single entry in the browser&#39;s history.\n"],["go_forward","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-go_forward","()",""],["go_forward","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-go_forward","()",""],["go_forward","Capybara::Session","Capybara/Session.html#method-i-go_forward","()","<p>Move forward a single entry in the browser&#39;s history.\n"],["has_button?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_button-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has a button with the given text, value\nor id.\n<p>@param [String] locator …\n"],["has_checked_field?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_checked_field-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has a radio button or checkbox with the\ngiven label, value or id, …\n"],["has_content?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_content-3F","(*args)",""],["has_css?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_css-3F","(path, options={}, &optional_filter_block)","<p>Checks if a given CSS selector is on the page or a descendant of the\ncurrent node.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">page</span>.<span class=\"ruby-identifier\">has_css?</span>(<span class=\"ruby-string\">&#39;p#foo&#39;</span>)\n</pre>\n"],["has_current_path?","Capybara::SessionMatchers","Capybara/SessionMatchers.html#method-i-has_current_path-3F","(path, options={})","<p>Checks if the page has the given path. By default, if passed a full url\nthis will compare against the …\n"],["has_field?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_field-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has a form field with the given label,\nname or id.\n<p>For text fields …\n"],["has_link?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_link-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has a link with the given text or id.\n<p>@param [String] locator      …\n"],["has_no_button?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_no_button-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has no button with the given text, value\nor id.\n<p>@param [String] locator …\n"],["has_no_checked_field?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_no_checked_field-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has no radio button or checkbox with the\ngiven label, value or id, …\n"],["has_no_content?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_no_content-3F","(*args)",""],["has_no_css?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_no_css-3F","(path, options={}, &optional_filter_block)","<p>Checks if a given CSS selector is not on the page or a descendant of the\ncurrent node. Usage is identical …\n"],["has_no_current_path?","Capybara::SessionMatchers","Capybara/SessionMatchers.html#method-i-has_no_current_path-3F","(path, options={})","<p>Checks if the page doesn&#39;t have the given path. By default, if passed a\nfull url this will compare …\n"],["has_no_field?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_no_field-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has no form field with the given label,\nname or id. See {Capybara::Node::Matchers#has_field?}. …\n"],["has_no_link?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_no_link-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has no link with the given text or id.\n<p>@param (see Capybara::Node::Finders#has_link? …\n"],["has_no_select?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_no_select-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has no select field with the given\nlabel, name or id. See {Capybara::Node::Matchers#has_select?}. …\n"],["has_no_selector?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_no_selector-3F","(*args, &optional_filter_block)","<p>Checks if a given selector is not on the page or a descendant of the\ncurrent node. Usage is identical …\n"],["has_no_table?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_no_table-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has no table with the given id or\ncaption. See {Capybara::Node::Matchers#has_table?}. …\n"],["has_no_text?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_no_text-3F","(*args)","<p>Checks if the page or current node does not have the given text content,\nignoring any HTML tags and normalizing …\n"],["has_no_title?","Capybara::Node::DocumentMatchers","Capybara/Node/DocumentMatchers.html#method-i-has_no_title-3F","(title, options = {})","<p>Checks if the page doesn&#39;t have the given title.\n<p>@macro title_query_params @return [Boolean]\n"],["has_no_unchecked_field?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_no_unchecked_field-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has no radio button or checkbox with the\ngiven label, value or id, …\n"],["has_no_xpath?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_no_xpath-3F","(path, options={}, &optional_filter_block)","<p>Checks if a given XPath expression is not on the page or a descendant of\nthe current node. Usage is identical …\n"],["has_select?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_select-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has a select field with the given label,\nname or id.\n<p>It can be specified …\n"],["has_selector?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_selector-3F","(*args, &optional_filter_block)","<p>Checks if a given selector is on the page or a descendant of the current\nnode.\n\n<pre>page.has_selector?(&#39;p#foo&#39;) ...</pre>\n"],["has_table?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_table-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has a table with the given id or\ncaption:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">page</span>.<span class=\"ruby-identifier\">has_table?</span>(<span class=\"ruby-string\">&#39;People&#39;</span>)\n</pre>\n"],["has_text?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_text-3F","(*args)","<p>Checks if the page or current node has the given text content, ignoring any\nHTML tags.\n<p>Whitespaces are …\n"],["has_title?","Capybara::Node::DocumentMatchers","Capybara/Node/DocumentMatchers.html#method-i-has_title-3F","(title, options = {})","<p>Checks if the page has the given title.\n<p>@macro title_query_params @return [Boolean]\n"],["has_unchecked_field?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_unchecked_field-3F","(locator=nil, options={}, &optional_filter_block)","<p>Checks if the page or current node has a radio button or checkbox with the\ngiven label, value or id, …\n"],["has_xpath?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-has_xpath-3F","(path, options={}, &optional_filter_block)","<p>Checks if a given XPath expression is on the page or a descendant of the\ncurrent node.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">page</span>.<span class=\"ruby-identifier\">has_xpath?</span>(<span class=\"ruby-string\">&#39;.//p[@id=&quot;foo&quot;]&#39;</span>)\n</pre>\n"],["hash","Capybara::Window","Capybara/Window.html#method-i-hash","()",""],["have_button","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_button","(locator=nil, options={}, &optional_filter_block)","<p>RSpec matcher for buttons See {Capybara::Node::Matchers#has_button?}\n"],["have_checked_field","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_checked_field","(locator=nil, options={}, &optional_filter_block)","<p>RSpec matcher for checked fields See\n{Capybara::Node::Matchers#has_checked_field?}\n"],["have_content","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_content","(*args)",""],["have_css","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_css","(css, options={}, &optional_filter_block)","<p>RSpec matcher for whether elements(s) matching a given css selector exist\nSee {Capybara::Node::Matchers#has_css?} …\n"],["have_current_path","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_current_path","(path, options = {})","<p>RSpec matcher for the current path See\n{Capybara::SessionMatchers#assert_current_path}\n"],["have_field","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_field","(locator=nil, options={}, &optional_filter_block)","<p>RSpec matcher for links See {Capybara::Node::Matchers#has_field?}\n"],["have_link","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_link","(locator=nil, options={}, &optional_filter_block)","<p>RSpec matcher for links See {Capybara::Node::Matchers#has_link?}\n"],["have_select","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_select","(locator=nil, options={}, &optional_filter_block)","<p>RSpec matcher for select elements See\n{Capybara::Node::Matchers#has_select?}\n"],["have_selector","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_selector","(*args, &optional_filter_block)","<p>RSpec matcher for whether the element(s) matching a given selector exist\nSee {Capybara::Node::Matcher#assert_selector} …\n"],["have_table","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_table","(locator=nil, options={}, &optional_filter_block)","<p>RSpec matcher for table elements See {Capybara::Node::Matchers#has_table?}\n"],["have_text","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_text","(*args)","<p>RSpec matcher for text on the page See\n{Capybara::SessionMatchers#assert_text}\n"],["have_title","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_title","(title, options = {})",""],["have_unchecked_field","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_unchecked_field","(locator=nil, options={}, &optional_filter_block)","<p>RSpec matcher for unchecked fields See\n{Capybara::Node::Matchers#has_unchecked_field?}\n"],["have_xpath","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-have_xpath","(xpath, options={}, &optional_filter_block)","<p>RSpec matcher for whether elements(s) matching a given xpath selector exist\nSee {Capybara::Node::Matchers#has_xpath?} …\n"],["header","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-header","(key, value)",""],["headless_chrome?","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-headless_chrome-3F","()","<p>@api private\n"],["hover","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-hover","()",""],["hover","Capybara::Node::Element","Capybara/Node/Element.html#method-i-hover","()","<p>Hover on the Element\n<p>@return [Capybara::Node::Element]  The element\n"],["hover","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-hover","()",""],["html","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-html","()",""],["html","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-html","()",""],["html","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-html","()",""],["html","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-html","()",""],["html","Capybara::Session","Capybara/Session.html#method-i-html","()","<p>@return [String] A snapshot of the DOM of the current document, as it looks\nright now (potentially modified …\n"],["included","Capybara","Capybara.html#method-c-included","(base)",""],["included","Capybara::DSL","Capybara/DSL.html#method-c-included","(base)",""],["included","Capybara::Features","Capybara/Features.html#method-c-included","(base)",""],["included","RSpec::Matchers","RSpec/Matchers.html#method-c-included","(base)",""],["increment","Capybara::Server::Middleware::Counter","Capybara/Server/Middleware/Counter.html#method-i-increment","()",""],["initialize_copy","Capybara::SessionConfig","Capybara/SessionConfig.html#method-i-initialize_copy","(other)",""],["inject_asset_host","Capybara::Helpers","Capybara/Helpers.html#method-i-inject_asset_host","(html, asset_host = Capybara.asset_host)","<p>Injects a `&lt;base&gt;` tag into the given HTML code, pointing to\n`Capybara.asset_host`.\n<p>@param [String] …\n"],["input_field?","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-input_field-3F","()",""],["insert_modal_handlers","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-insert_modal_handlers","(accept, response_text)",""],["inspect","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-inspect","()",""],["inspect","Capybara::Node::Document","Capybara/Node/Document.html#method-i-inspect","()",""],["inspect","Capybara::Node::Element","Capybara/Node/Element.html#method-i-inspect","()",""],["inspect","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-inspect","()",""],["inspect","Capybara::Session","Capybara/Session.html#method-i-inspect","()",""],["inspect","Capybara::Window","Capybara/Window.html#method-i-inspect","()",""],["instance_created?","Capybara::Session","Capybara/Session.html#method-c-instance_created-3F","()",""],["invalid_element_errors","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-invalid_element_errors","()",""],["invalid_element_errors","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-invalid_element_errors","()",""],["javascript_driver","Capybara::Config","Capybara/Config.html#method-i-javascript_driver","()","<p>@return [Symbol]    The name of the driver used when JavaScript is needed\n"],["label","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-label","()",""],["label","Capybara::Selector","Capybara/Selector.html#method-i-label","(label=nil)","<p>Set/get a descriptive label for the selector\n<p>@overload label(label)\n\n<pre>@param [String] label            A ...</pre>\n"],["lazy_select_elements","Capybara::Result","Capybara/Result.html#method-i-lazy_select_elements","(&block)",""],["load_selenium","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-load_selenium","()",""],["locate_field","Capybara::Selector","Capybara/Selector.html#method-i-locate_field","(xpath, locator, options={})",""],["make_params","Capybara::RackTest::Form","Capybara/RackTest/Form.html#method-i-make_params","()",""],["marionette?","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-marionette-3F","()","<p>@api private\n"],["marionette?","Capybara::SpecHelper","Capybara/SpecHelper.html#method-i-marionette-3F","(session)",""],["match","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-match","()",""],["match","Capybara::RSpecMatchers::Compound::And","Capybara/RSpecMatchers/Compound/And.html#method-i-match","(_expected, actual)",""],["match","Capybara::RSpecMatchers::Compound::Or","Capybara/RSpecMatchers/Compound/Or.html#method-i-match","(_expected, actual)",""],["match","Capybara::Selector","Capybara/Selector.html#method-i-match","(&block)","<p>Automatic selector detection\n<p>@yield [locator]                   This block takes the passed in locator …\n"],["match?","Capybara::Selector","Capybara/Selector.html#method-i-match-3F","(locator)","\n<pre>Should this selector be used for the passed in locator\n\nThis is used by the automatic selector selection ...</pre>\n"],["match_css","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-match_css","(css, options={}, &optional_filter_block)","<p>RSpec matcher for whether the current element matches a given css selector\n"],["match_selector","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-match_selector","(*args, &optional_filter_block)","<p>RSpec matcher for whether the current element matches a given selector See\n{Capybara::Node::Matchers#assert_matches_selector} …\n"],["match_xpath","Capybara::RSpecMatchers","Capybara/RSpecMatchers.html#method-i-match_xpath","(xpath, options={}, &optional_filter_block)","<p>RSpec matcher for whether the current element matches a given xpath\nselector\n"],["matcher_matches?","Capybara::RSpecMatchers::Compound::CapybaraEvaluator","Capybara/RSpecMatchers/Compound/CapybaraEvaluator.html#method-i-matcher_matches-3F","(matcher)",""],["matches?","Capybara::RSpecMatchers::BecomeClosed","Capybara/RSpecMatchers/BecomeClosed.html#method-i-matches-3F","(window)",""],["matches?","Capybara::RSpecMatchers::HaveCurrentPath","Capybara/RSpecMatchers/HaveCurrentPath.html#method-i-matches-3F","(actual)",""],["matches?","Capybara::RSpecMatchers::HaveSelector","Capybara/RSpecMatchers/HaveSelector.html#method-i-matches-3F","(actual)",""],["matches?","Capybara::RSpecMatchers::HaveText","Capybara/RSpecMatchers/HaveText.html#method-i-matches-3F","(actual)",""],["matches?","Capybara::RSpecMatchers::HaveTitle","Capybara/RSpecMatchers/HaveTitle.html#method-i-matches-3F","(actual)",""],["matches?","Capybara::RSpecMatchers::MatchSelector","Capybara/RSpecMatchers/MatchSelector.html#method-i-matches-3F","(actual)",""],["matches?","Capybara::Selector::Filters::NodeFilter","Capybara/Selector/Filters/NodeFilter.html#method-i-matches-3F","(node, value)",""],["matches_count?","Capybara::Queries::BaseQuery","Capybara/Queries/BaseQuery.html#method-i-matches_count-3F","(count)","<p>Checks if the given count matches the query count options. Defaults to true\nif no count options are specified. …\n"],["matches_count?","Capybara::Result","Capybara/Result.html#method-i-matches_count-3F","()",""],["matches_css?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-matches_css-3F","(css, options={}, &optional_filter_block)","<p>Checks if the current node matches given CSS selector\n<p>@param [String] css The CSS selector to match against …\n"],["matches_filters?","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-matches_filters-3F","(node)",""],["matches_selector?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-matches_selector-3F","(*args, &optional_filter_block)","<p>Checks if the current node matches given selector\n<p>@param (see Capybara::Node::Finders#has_selector?) @return …\n"],["matches_xpath?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-matches_xpath-3F","(xpath, options={}, &optional_filter_block)","<p>Checks if the current node matches given XPath expression\n<p>@param [String, XPath::Expression] xpath The …\n"],["maximize","Capybara::Window","Capybara/Window.html#method-i-maximize","()","<p>Maximize window.\n<p>If a particular driver (e.g. headless driver) doesn&#39;t have concept of\nmaximizing …\n"],["maximize_window","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-maximize_window","(handle)",""],["maximize_window","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-maximize_window","(handle)",""],["merge_param!","Capybara::RackTest::Form","Capybara/RackTest/Form.html#method-i-merge_param-21","(params, key, value)",""],["method_missing","Capybara::ConfigureDeprecator","Capybara/ConfigureDeprecator.html#method-i-method_missing","(m, *args, &block)",""],["middleware","Capybara::Server","Capybara/Server.html#method-i-middleware","()",""],["modal_error","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-modal_error","()",""],["modal_options","Capybara::Session","Capybara/Session.html#method-i-modal_options","(text_or_options, options)",""],["mode","Capybara","Capybara.html#method-c-mode","()",""],["modify_selector","Capybara","Capybara.html#method-c-modify_selector","(name, &block)","<p>Modify a selector previously created by {Capybara.add_selector}. For\nexample, adding a new filter to …\n"],["monotonic_time","Capybara::Helpers","Capybara/Helpers.html#method-i-monotonic_time","()",""],["multipart?","Capybara::RackTest::Form","Capybara/RackTest/Form.html#method-i-multipart-3F","()",""],["multiple?","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-multiple-3F","()",""],["multiple?","Capybara::Node::Element","Capybara/Node/Element.html#method-i-multiple-3F","()","<p>Whether or not the element supports multiple results.\n<p>@return [Boolean]     Whether the element supports …\n"],["multiple?","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-multiple-3F","()",""],["name","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-name","()",""],["native","Capybara::Node::Element","Capybara/Node/Element.html#method-i-native","()","<p>@return [Object]    The native element from the driver, this allows access\nto driver specific methods …\n"],["needs_server?","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-needs_server-3F","()",""],["needs_server?","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-needs_server-3F","()",""],["negative_failure_message","Capybara::Queries::BaseQuery","Capybara/Queries/BaseQuery.html#method-i-negative_failure_message","()",""],["negative_failure_message","Capybara::Queries::CurrentPathQuery","Capybara/Queries/CurrentPathQuery.html#method-i-negative_failure_message","()",""],["negative_failure_message","Capybara::Queries::TextQuery","Capybara/Queries/TextQuery.html#method-i-negative_failure_message","()",""],["negative_failure_message","Capybara::Queries::TitleQuery","Capybara/Queries/TitleQuery.html#method-i-negative_failure_message","()",""],["negative_failure_message","Capybara::Result","Capybara/Result.html#method-i-negative_failure_message","()",""],["new","Capybara::Config","Capybara/Config.html#method-c-new","()",""],["new","Capybara::ConfigureDeprecator","Capybara/ConfigureDeprecator.html#method-c-new","(config)",""],["new","Capybara::Driver::Node","Capybara/Driver/Node.html#method-c-new","(driver, native)",""],["new","Capybara::Node::Base","Capybara/Node/Base.html#method-c-new","(session, base)",""],["new","Capybara::Node::Element","Capybara/Node/Element.html#method-c-new","(session, base, query_scope, query)",""],["new","Capybara::Node::Simple","Capybara/Node/Simple.html#method-c-new","(native)",""],["new","Capybara::Queries::BaseQuery","Capybara/Queries/BaseQuery.html#method-c-new","(options)",""],["new","Capybara::Queries::CurrentPathQuery","Capybara/Queries/CurrentPathQuery.html#method-c-new","(expected_path, options = {})",""],["new","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-c-new","(*args, &filter_block)",""],["new","Capybara::Queries::TextQuery","Capybara/Queries/TextQuery.html#method-c-new","(*args)",""],["new","Capybara::Queries::TitleQuery","Capybara/Queries/TitleQuery.html#method-c-new","(expected_title, options = {})",""],["new","Capybara::RSpecMatchers::BecomeClosed","Capybara/RSpecMatchers/BecomeClosed.html#method-c-new","(options)",""],["new","Capybara::RSpecMatchers::Compound::CapybaraEvaluator","Capybara/RSpecMatchers/Compound/CapybaraEvaluator.html#method-c-new","(actual, matcher_1, matcher_2)",""],["new","Capybara::RSpecMatchers::HaveCurrentPath","Capybara/RSpecMatchers/HaveCurrentPath.html#method-c-new","(*args)",""],["new","Capybara::RSpecMatchers::HaveSelector","Capybara/RSpecMatchers/HaveSelector.html#method-c-new","(*args, &filter_block)",""],["new","Capybara::RSpecMatchers::HaveText","Capybara/RSpecMatchers/HaveText.html#method-c-new","(*args)",""],["new","Capybara::RSpecMatchers::HaveTitle","Capybara/RSpecMatchers/HaveTitle.html#method-c-new","(*args)",""],["new","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-c-new","(driver)",""],["new","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-c-new","(app, options={})",""],["new","Capybara::RackTest::Form::NilUploadedFile","Capybara/RackTest/Form/NilUploadedFile.html#method-c-new","()",""],["new","Capybara::Result","Capybara/Result.html#method-c-new","(elements, query)",""],["new","Capybara::Selector","Capybara/Selector.html#method-c-new","(name, &block)",""],["new","Capybara::Selector::FilterSet","Capybara/Selector/FilterSet.html#method-c-new","(name, &block)",""],["new","Capybara::Selector::Filters::Base","Capybara/Selector/Filters/Base.html#method-c-new","(name, block, options={})",""],["new","Capybara::Selector::Filters::IdentityExpressionFilter","Capybara/Selector/Filters/IdentityExpressionFilter.html#method-c-new","()",""],["new","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-c-new","(app, options={})",""],["new","Capybara::Server","Capybara/Server.html#method-c-new","(app, port=Capybara.server_port, host=Capybara.server_host, server_errors=Capybara.server_errors)",""],["new","Capybara::Server::Middleware","Capybara/Server/Middleware.html#method-c-new","(app, server_errors)",""],["new","Capybara::Server::Middleware::Counter","Capybara/Server/Middleware/Counter.html#method-c-new","()",""],["new","Capybara::Session","Capybara/Session.html#method-c-new","(mode, app=nil)",""],["new","Capybara::Window","Capybara/Window.html#method-c-new","(session, handle)","<p>@api private\n"],["new","TestApp::TestAppOtherError","TestApp/TestAppOtherError.html#method-c-new","(string1, msg)",""],["no_such_window_error","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-no_such_window_error","()",""],["no_such_window_error","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-no_such_window_error","()",""],["node_filters","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-node_filters","()",""],["node_filters","Capybara::Selector","Capybara/Selector.html#method-i-node_filters","()",""],["node_filters","Capybara::Selector::FilterSet","Capybara/Selector/FilterSet.html#method-i-node_filters","()",""],["normalize_whitespace","Capybara::Helpers","Capybara/Helpers.html#method-i-normalize_whitespace","(text)","<p>Normalizes whitespace space by stripping leading and trailing whitespace\nand replacing sequences of whitespace …\n"],["not_matches_css?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-not_matches_css-3F","(css, options={}, &optional_filter_block)","<p>Checks if the current node does not match given CSS selector\n<p>@param [String] css The CSS selector to match …\n"],["not_matches_selector?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-not_matches_selector-3F","(*args, &optional_filter_block)","<p>Checks if the current node does not match given selector Usage is identical\nto Capybara::Node::Matchers#has_selector? …\n"],["not_matches_xpath?","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-not_matches_xpath-3F","(xpath, options={}, &optional_filter_block)","<p>Checks if the current node does not match given XPath expression\n<p>@param [String, XPath::Expression] xpath …\n"],["open_file","Capybara::Session","Capybara/Session.html#method-i-open_file","(path)",""],["open_new_window","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-open_new_window","()",""],["open_new_window","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-open_new_window","()",""],["open_new_window","Capybara::Session","Capybara/Session.html#method-i-open_new_window","()","<p>Open new window. Current window doesn&#39;t change as the result of this\ncall. It should be switched …\n"],["options","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-options","()",""],["or","Capybara::RSpecMatchers::Compound","Capybara/RSpecMatchers/Compound.html#method-i-or","(matcher)",""],["original_filename","Capybara::RackTest::Form::NilUploadedFile","Capybara/RackTest/Form/NilUploadedFile.html#method-i-original_filename","()",""],["page","Capybara::DSL","Capybara/DSL.html#method-i-page","()","<p>Shortcut to accessing the current session.\n\n<pre>class MyClass\n  include Capybara::DSL\n\n  def has_header?\n  ...</pre>\n"],["params","Capybara::RackTest::Form","Capybara/RackTest/Form.html#method-i-params","(button)",""],["parent","Capybara::Node::Base","Capybara/Node/Base.html#method-i-parent","()","<p>@deprecated Use query_scope instead\n"],["path","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-path","()",""],["path","Capybara::Node::Element","Capybara/Node/Element.html#method-i-path","()","<p>An XPath expression describing where on the page the element can be found\n<p>@return [String]      An XPath …\n"],["path","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-path","()","<p>An XPath expression describing where on the page the element can be found\n<p>@return [String]      An XPath …\n"],["path","Capybara::RackTest::Form::NilUploadedFile","Capybara/RackTest/Form/NilUploadedFile.html#method-i-path","()",""],["path","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-path","()",""],["path","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-path","()",""],["pending_requests?","Capybara::Server","Capybara/Server.html#method-i-pending_requests-3F","()",""],["pending_requests?","Capybara::Server::Middleware","Capybara/Server/Middleware.html#method-i-pending_requests-3F","()",""],["port_key","Capybara::Server","Capybara/Server.html#method-i-port_key","()",""],["ports","Capybara::Server","Capybara/Server.html#method-c-ports","()",""],["post","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-post","(*args, &block)",""],["prepare_path","Capybara::Session","Capybara/Session.html#method-i-prepare_path","(path, extension)",""],["process","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-process","(method, path, attributes = {}, env = {})",""],["process_and_follow_redirects","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-process_and_follow_redirects","(method, path, attributes = {}, env = {})",""],["put","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-put","(*args, &block)",""],["query","Capybara::RSpecMatchers::HaveSelector","Capybara/RSpecMatchers/HaveSelector.html#method-i-query","()",""],["query","Capybara::RSpecMatchers::MatchSelector","Capybara/RSpecMatchers/MatchSelector.html#method-i-query","()",""],["quietly","Capybara::SpecHelper","Capybara/SpecHelper.html#method-i-quietly","()",""],["quit","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-quit","()",""],["radio?","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-radio-3F","()",""],["raise_server_error!","Capybara::Session","Capybara/Session.html#method-i-raise_server_error-21","()","<p>Raise errors encountered in the server\n"],["raise_unless_current","Capybara::Window","Capybara/Window.html#method-i-raise_unless_current","(what)",""],["read","Capybara::RackTest::Form::NilUploadedFile","Capybara/RackTest/Form/NilUploadedFile.html#method-i-read","()",""],["readonly?","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-readonly-3F","()",""],["readonly?","Capybara::Node::Element","Capybara/Node/Element.html#method-i-readonly-3F","()","<p>Whether or not the element is readonly.\n<p>@return [Boolean]     Whether the element is readonly\n"],["readonly?","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-readonly-3F","()",""],["redirect_limit","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-redirect_limit","()",""],["refresh","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-refresh","()",""],["refresh","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-refresh","()",""],["refresh","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-refresh","()",""],["refresh","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-refresh","()",""],["refresh","Capybara::Session","Capybara/Session.html#method-i-refresh","()","<p>Refresh the page\n"],["refute_matches_selector","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-refute_matches_selector","(*args, &optional_filter_block)",""],["refute_selector","Capybara::Node::Matchers","Capybara/Node/Matchers.html#method-i-refute_selector","(*args, &optional_filter_block)",""],["register_driver","Capybara","Capybara.html#method-c-register_driver","(name, &block)","<p>Register a new driver for Capybara.\n\n<pre>Capybara.register_driver :rack_test do |app|\n  Capybara::RackTest::Driver.new(app) ...</pre>\n"],["register_server","Capybara","Capybara.html#method-c-register_server","(name, &block)","<p>Register a new server for Capybara.\n\n<pre>Capybara.register_server :webrick do |app, port, host|\n  require &#39;rack/handler/webrick&#39; ...</pre>\n"],["reload","Capybara::Node::Base","Capybara/Node/Base.html#method-i-reload","()","<p>overridden in subclasses, e.g. Capybara::Node::Element\n"],["reload","Capybara::Node::Element","Capybara/Node/Element.html#method-i-reload","()",""],["remove","Capybara::Selector","Capybara/Selector.html#method-c-remove","(name)",""],["remove","Capybara::Selector::FilterSet","Capybara/Selector/FilterSet.html#method-c-remove","(name)",""],["request","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-request","()",""],["request_method","Capybara::RackTest::Form","Capybara/RackTest/Form.html#method-i-request_method","()",""],["request_path","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-request_path","()",""],["reset","Capybara::RSpecMatchers::Compound::CapybaraEvaluator","Capybara/RSpecMatchers/Compound/CapybaraEvaluator.html#method-i-reset","()",""],["reset!","Capybara","Capybara.html#method-c-reset-21","()",""],["reset!","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-reset-21","()",""],["reset!","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-reset-21","()",""],["reset!","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-reset-21","()",""],["reset!","Capybara::Session","Capybara/Session.html#method-i-reset-21","()","<p>Reset the session (i.e. remove cookies and navigate to blank page)\n<p>This method does not:\n\n<pre>* accept modal ...</pre>\n"],["reset!","Capybara::SpecHelper","Capybara/SpecHelper.html#method-c-reset-21","()",""],["reset_cache!","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-reset_cache-21","()",""],["reset_error!","Capybara::Server","Capybara/Server.html#method-i-reset_error-21","()",""],["reset_host!","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-reset_host-21","()",""],["reset_session!","Capybara::Session","Capybara/Session.html#method-i-reset_session-21","()",""],["reset_sessions!","Capybara","Capybara.html#method-c-reset_sessions-21","()","<p>Reset sessions, cleaning out the pool of sessions. This will remove any\nsession information such as cookies. …\n"],["reset_threadsafe","Capybara::SpecHelper","Capybara/SpecHelper.html#method-c-reset_threadsafe","(bool = false, session = nil)",""],["resize_to","Capybara::Window","Capybara/Window.html#method-i-resize_to","(width, height)","<p>Resize window.\n<p>@macro about_current @param width [String]  the new window width in pixels\n@param height …\n"],["resize_window_to","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-resize_window_to","(handle, width, height)",""],["resize_window_to","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-resize_window_to","(handle, width, height)",""],["resolve_for","Capybara::Queries::AncestorQuery","Capybara/Queries/AncestorQuery.html#method-i-resolve_for","(node, exact = nil)","<p>@api private\n"],["resolve_for","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-resolve_for","(node, exact = nil)","<p>@api private\n"],["resolve_for","Capybara::Queries::SiblingQuery","Capybara/Queries/SiblingQuery.html#method-i-resolve_for","(node, exact = nil)","<p>@api private\n"],["resolve_for","Capybara::Queries::TextQuery","Capybara/Queries/TextQuery.html#method-i-resolve_for","(node)",""],["resolves_for?","Capybara::Queries::CurrentPathQuery","Capybara/Queries/CurrentPathQuery.html#method-i-resolves_for-3F","(session)",""],["resolves_for?","Capybara::Queries::TitleQuery","Capybara/Queries/TitleQuery.html#method-i-resolves_for-3F","(node)",""],["respond_to_missing?","Capybara::ConfigureDeprecator","Capybara/ConfigureDeprecator.html#method-i-respond_to_missing-3F","(m, include_private = false)",""],["response","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-response","()",""],["response_headers","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-response_headers","()",""],["response_headers","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-response_headers","()",""],["response_headers","Capybara::Session","Capybara/Session.html#method-i-response_headers","()","<p>Returns a hash of response headers. Not supported by all drivers (e.g.\nSelenium)\n<p>@return [Hash{String …\n"],["responsive?","Capybara::Server","Capybara/Server.html#method-i-responsive-3F","()",""],["rest","Capybara::Result","Capybara/Result.html#method-i-rest","()",""],["reuse_server=","Capybara::Config","Capybara/Config.html#method-i-reuse_server-3D","(bool)",""],["right_click","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-right_click","()",""],["right_click","Capybara::Node::Element","Capybara/Node/Element.html#method-i-right_click","()","<p>Right Click the Element\n<p>@return [Capybara::Node::Element]  The element\n"],["right_click","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-right_click","()",""],["rspec2?","Capybara::SpecHelper","Capybara/SpecHelper.html#method-i-rspec2-3F","()",""],["run_default_server","Capybara","Capybara.html#method-c-run_default_server","(app, port)","<p>Runs Capybara&#39;s default server for the given application and port under\nmost circumstances you should …\n"],["run_specs","Capybara::SpecHelper","Capybara/SpecHelper.html#method-c-run_specs","(session, name, options={})",""],["save_and_open_page","Capybara::Session","Capybara/Session.html#method-i-save_and_open_page","(path = nil)","<p>Save a snapshot of the page and open it in a browser for inspection.\n<p>If invoked without arguments it will …\n"],["save_and_open_page_path=","Capybara::SessionConfig","Capybara/SessionConfig.html#method-i-save_and_open_page_path-3D","(path)",""],["save_and_open_screenshot","Capybara::Session","Capybara/Session.html#method-i-save_and_open_screenshot","(path = nil, options = {})","<p>Save a screenshot of the page and open it for inspection.\n<p>If invoked without arguments it will save file …\n"],["save_page","Capybara::Session","Capybara/Session.html#method-i-save_page","(path = nil)","<p>Save a snapshot of the page. If `Capybara.asset_host` is set it will inject\n`base` tag\n\n<pre>pointing to `asset_host`.</pre>\n"],["save_screenshot","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-save_screenshot","(path, options={})",""],["save_screenshot","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-save_screenshot","(path, _options={})",""],["save_screenshot","Capybara::Session","Capybara/Session.html#method-i-save_screenshot","(path = nil, options = {})","<p>Save a screenshot of page.\n<p>If invoked without arguments it will save file to `Capybara.save_path`\n\n<pre>and file ...</pre>\n"],["scopes","Capybara::Session","Capybara/Session.html#method-i-scopes","()",""],["select","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-select","(value, options={})","<p>If `:from` option is present, `select` finds a select box on the page and\nselects a particular option …\n"],["select_node","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-select_node","()","<p>a reference to the select node if this is an option node\n"],["select_node","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-select_node","()","<p>a reference to the select node if this is an option node\n"],["select_option","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-select_option","()",""],["select_option","Capybara::Node::Element","Capybara/Node/Element.html#method-i-select_option","()","<p>Select this node if is an option element inside a select tag\n<p>@return [Capybara::Node::Element]  The element …\n"],["select_option","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-select_option","()",""],["select_option","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-select_option","()",""],["selected?","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-selected-3F","()",""],["selected?","Capybara::Node::Element","Capybara/Node/Element.html#method-i-selected-3F","()","<p>Whether or not the element is selected.\n<p>@return [Boolean]     Whether the element is selected\n"],["selected?","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-selected-3F","()","<p>Whether or not the element is selected.\n<p>@return [Boolean]     Whether the element is selected\n"],["selected?","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-selected-3F","()",""],["selected?","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-selected-3F","()",""],["send_keys","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-send_keys","(*args)",""],["send_keys","Capybara::Node::Element","Capybara/Node/Element.html#method-i-send_keys","(*args)","<p>Send Keystrokes to the Element\n<p>@overload send_keys(keys, …)\n\n<pre>@param [String, Symbol, Array&lt;String,Symbol&gt;] ...</pre>\n"],["send_keys","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-send_keys","(*args)",""],["server","Capybara::Config","Capybara/Config.html#method-i-server","(&block)","<p>Return the proc that Capybara will call to run the Rack application. The\nblock returned receives a rack …\n"],["server=","Capybara::Config","Capybara/Config.html#method-i-server-3D","(name)","<p>Set the server to use.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Capybara</span>.<span class=\"ruby-identifier\">server</span> = :<span class=\"ruby-identifier\">webrick</span>\n<span class=\"ruby-constant\">Capybara</span>.<span class=\"ruby-identifier\">server</span> = :<span class=\"ruby-identifier\">puma</span>, { <span class=\"ruby-constant\">Silent</span><span class=\"ruby-operator\">:</span> <span class=\"ruby-keyword\">true</span> }\n</pre>\n<p>@overload server=(name) …\n"],["server_errors=","Capybara::SessionConfig","Capybara/SessionConfig.html#method-i-server_errors-3D","(errors)",""],["server_host","Capybara::SessionConfig","Capybara/SessionConfig.html#method-i-server_host","","<p>@!method always_include_port\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">See</span> {<span class=\"ruby-constant\">Capybara</span>.<span class=\"ruby-identifier\">configure</span>}\n</pre>\n<p>@!method run_server\n"],["servers","Capybara","Capybara.html#method-c-servers","()",""],["session_name","Capybara","Capybara.html#method-c-session_name","()","<p>The current session name.\n<p>@return [Symbol]    The name of the currently used session.\n"],["session_name=","Capybara","Capybara.html#method-c-session_name-3D","(name)",""],["session_options","Capybara","Capybara.html#method-c-session_options","()",""],["session_options","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-session_options","()",""],["session_options","Capybara::Node::Base","Capybara/Node/Base.html#method-i-session_options","()","<p>@api private\n"],["session_options","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-session_options","()","<p>@api private\n"],["session_options","Capybara::Queries::BaseQuery","Capybara/Queries/BaseQuery.html#method-i-session_options","()",""],["session_options","Capybara::RSpecMatchers::Matcher","Capybara/RSpecMatchers/Matcher.html#method-i-session_options","()",""],["session_pool","Capybara","Capybara.html#method-c-session_pool","()",""],["session_query_args","Capybara::RSpecMatchers::Matcher","Capybara/RSpecMatchers/Matcher.html#method-i-session_query_args","()",""],["set","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-set","(value, options={})","<p>@param value String or Array. Array is only allowed if node has\n&#39;multiple&#39; attribute @param options …\n"],["set","Capybara::Node::Element","Capybara/Node/Element.html#method-i-set","(value, options={})","<p>Set the value of the form element to the given value.\n<p>@param [String] value    The new value @param [Hash{}] …\n"],["set","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-set","(value)",""],["set","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-set","(value, options={})","<p>Set the value of the form element to the given value.\n<p>@param [String] value    The new value @param [Hash{}] …\n"],["set_checkbox","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-set_checkbox","(value)",""],["set_input","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-set_input","(value)",""],["set_radio","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-set_radio","(_value)",""],["set_text","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-set_text","(value, options)",""],["should_be_on","Object","Object.html#method-i-should_be_on","(server_index, path=\"/host\", scheme=\"http\")",""],["sibling","Capybara::Node::Finders","Capybara/Node/Finders.html#method-i-sibling","(*args, &optional_filter_block)","<p>Find an {Capybara::Node::Element} based on the given arguments that is also\na sibling of the element …\n"],["silence_stream","Capybara::SpecHelper","Capybara/SpecHelper.html#method-i-silence_stream","(stream)",""],["silenced_unknown_error_message?","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-silenced_unknown_error_message-3F","(msg)",""],["silenced_unknown_error_messages","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-silenced_unknown_error_messages","()",""],["size","Capybara::RackTest::Form::NilUploadedFile","Capybara/RackTest/Form/NilUploadedFile.html#method-i-size","()",""],["size","Capybara::Window","Capybara/Window.html#method-i-size","()","<p>Get window size.\n<p>@macro about_current @return [Array&lt;(Integer, Integer)&gt;] an array\nwith width and …\n"],["skip?","Capybara::Selector::Filters::Base","Capybara/Selector/Filters/Base.html#method-i-skip-3F","(value)",""],["source","Capybara::Session","Capybara/Session.html#method-i-source","()",""],["spec","Capybara::SpecHelper","Capybara/SpecHelper.html#method-c-spec","(name, options={}, &block)",""],["status_code","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-status_code","()",""],["status_code","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-status_code","()",""],["status_code","Capybara::Session","Capybara/Session.html#method-i-status_code","()","<p>Returns the current HTTP status code as an Integer. Not supported by all\ndrivers (e.g. Selenium)\n<p>@return …\n"],["string","Capybara","Capybara.html#method-c-string","(html)","<p>Wraps the given string, which should contain an HTML document or fragment\nin a {Capybara::Node::Simple} …\n"],["string_node","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-string_node","()",""],["submit","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-submit","(method, path, attributes)",""],["submit","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-submit","(method, path, attributes)",""],["submit","Capybara::RackTest::Form","Capybara/RackTest/Form.html#method-i-submit","(button)",""],["supports_exact?","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-supports_exact-3F","()","<p>@api private\n"],["switch_to_frame","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-switch_to_frame","(frame)","<p>@param frame [Capybara::Node::Element, :parent, :top]  The iframe element\nto switch to\n"],["switch_to_frame","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-switch_to_frame","(frame)",""],["switch_to_frame","Capybara::Session","Capybara/Session.html#method-i-switch_to_frame","(frame)","<p>Switch to the given frame\n<p>If you use this method you are responsible for making sure you switch back\nto …\n"],["switch_to_window","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-switch_to_window","(handle)",""],["switch_to_window","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-switch_to_window","(handle)",""],["switch_to_window","Capybara::Session","Capybara/Session.html#method-i-switch_to_window","(window = nil, options= {}, &window_locator)","<p>@overload switch_to_window(&amp;block)\n\n<pre>Switches to the first window for which given block returns a value ...</pre>\n"],["sync_element","Capybara::RSpecMatchers::Compound::And","Capybara/RSpecMatchers/Compound/And.html#method-i-sync_element","(el)",""],["sync_element","Capybara::RSpecMatchers::Compound::Or","Capybara/RSpecMatchers/Compound/Or.html#method-i-sync_element","(el)",""],["synced_resolve","Capybara::Node::Finders","Capybara/Node/Finders.html#method-i-synced_resolve","(query)",""],["synchronize","Capybara::Node::Base","Capybara/Node/Base.html#method-i-synchronize","(seconds=session_options.default_max_wait_time, options = {})","<p>This method is Capybara&#39;s primary defence against asynchronicity\nproblems. It works by attempting …\n"],["synchronize","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-synchronize","(seconds=nil)",""],["tag_name","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-tag_name","()",""],["tag_name","Capybara::Node::Element","Capybara/Node/Element.html#method-i-tag_name","()","<p>@return [String]      The tag name of the element\n"],["tag_name","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-tag_name","()","<p>@return [String]      The tag name of the element\n"],["tag_name","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-tag_name","()",""],["tag_name","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-tag_name","()",""],["text","Capybara::Node::Document","Capybara/Node/Document.html#method-i-text","(type=nil)","<p>@return [String]    The text of the document\n"],["text","Capybara::Node::Element","Capybara/Node/Element.html#method-i-text","(type=nil)","<p>Retrieve the text of the element. If `Capybara.ignore_hidden_elements` is\n`true`, which it is by default, …\n"],["text","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-text","(type=nil)","<p>@return [String]    The text of the element\n"],["text","Capybara::Queries::TextQuery","Capybara/Queries/TextQuery.html#method-i-text","(node, query_type)",""],["text_or_password?","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-text_or_password-3F","()",""],["textarea?","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-textarea-3F","()",""],["threadsafe=","Capybara::Config","Capybara/Config.html#method-i-threadsafe-3D","(bool)",""],["title","Capybara::Node::Document","Capybara/Node/Document.html#method-i-title","()","<p>@return [String]    The title of the document\n"],["title","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-title","()","<p>@return [String]     The title of the document\n"],["title","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-title","()",""],["title","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-title","()",""],["title","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-title","()",""],["to_params_hash","Capybara::RackTest::Form::ParamsHash","Capybara/RackTest/Form/ParamsHash.html#method-i-to_params_hash","()",""],["to_regexp","Capybara::Helpers","Capybara/Helpers.html#method-i-to_regexp","(text, regexp_options=nil, exact=false)","<p>Escapes any characters that would have special meaning in a regexp if text\nis not a regexp\n<p>@param [String] …\n"],["trigger","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-trigger","(event)",""],["trigger","Capybara::Node::Element","Capybara/Node/Element.html#method-i-trigger","(event)","<p>Trigger any event on the current element, for example mouseover or focus\nevents. Does not work in Selenium …\n"],["type","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-type","()",""],["uncheck","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-uncheck","(locator, options={})","<p>Find a check box and mark uncheck it. The check box can be found via name,\nid or label text.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">page</span>.<span class=\"ruby-identifier\">uncheck</span>(<span class=\"ruby-string\">&#39;German&#39;</span>)\n</pre>\n"],["unnormalized_text","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-unnormalized_text","(check_ancestor_visibility = true)",""],["unselect","Capybara::Node::Actions","Capybara/Node/Actions.html#method-i-unselect","(value, options={})","<p>Find a select box on the page and unselect a particular option from it. If\nthe select box is a multiple …\n"],["unselect_option","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-unselect_option","()",""],["unselect_option","Capybara::Node::Element","Capybara/Node/Element.html#method-i-unselect_option","()","<p>Unselect this node if is an option element inside a multiple select tag\n<p>@return [Capybara::Node::Element] …\n"],["unselect_option","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-unselect_option","()",""],["unselect_option","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-unselect_option","()",""],["unwrap_script_result","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-unwrap_script_result","(arg)",""],["update","Capybara::Selector","Capybara/Selector.html#method-c-update","(name, &block)",""],["use_default_driver","Capybara","Capybara.html#method-c-use_default_driver","()","<p>Use the default driver as the current driver\n"],["using_driver","Capybara","Capybara.html#method-c-using_driver","(driver)","<p>Yield a block using a specific driver\n"],["using_session","Capybara","Capybara.html#method-c-using_session","(name)","<p>Yield a block using a specific session name.\n"],["using_session","Capybara::DSL","Capybara/DSL.html#method-i-using_session","(name, &block)","<p>Shortcut to working in a different session.\n"],["using_wait_time","Capybara","Capybara.html#method-c-using_wait_time","(seconds)","<p>Yield a block using a specific wait time\n"],["using_wait_time","Capybara::DSL","Capybara/DSL.html#method-i-using_wait_time","(seconds, &block)","<p>Shortcut to using a different wait time.\n"],["using_wait_time","Capybara::Session","Capybara/Session.html#method-i-using_wait_time","(seconds)","<p>Yield a block using a specific wait time\n"],["valid_keys","Capybara::Queries::CurrentPathQuery","Capybara/Queries/CurrentPathQuery.html#method-i-valid_keys","()",""],["valid_keys","Capybara::Queries::MatchQuery","Capybara/Queries/MatchQuery.html#method-i-valid_keys","()",""],["valid_keys","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-valid_keys","()",""],["valid_keys","Capybara::Queries::TextQuery","Capybara/Queries/TextQuery.html#method-i-valid_keys","()",""],["valid_keys","Capybara::Queries::TitleQuery","Capybara/Queries/TitleQuery.html#method-i-valid_keys","()",""],["valid_value?","Capybara::Selector::Filters::Base","Capybara/Selector/Filters/Base.html#method-i-valid_value-3F","(value)",""],["value","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-value","()",""],["value","Capybara::Node::Element","Capybara/Node/Element.html#method-i-value","()","<p>@return [String]    The value of the form element\n"],["value","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-value","()","<p>@return [String]    The value of the form element\n"],["value","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-value","()",""],["value","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-value","()",""],["visible","Capybara::Queries::MatchQuery","Capybara/Queries/MatchQuery.html#method-i-visible","()",""],["visible","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-visible","()",""],["visible","Capybara::Selector","Capybara/Selector.html#method-i-visible","(default_visibility)","<p>Set the default visibility mode that shouble be used if no visibile option\nis passed when using the selector. …\n"],["visible?","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-visible-3F","()",""],["visible?","Capybara::Node::Element","Capybara/Node/Element.html#method-i-visible-3F","()","<p>Whether or not the element is visible. Not all drivers support CSS, so the\nresult may be inaccurate. …\n"],["visible?","Capybara::Node::Simple","Capybara/Node/Simple.html#method-i-visible-3F","(check_ancestors = true)","<p>Whether or not the element is visible. Does not support CSS, so the result\nmay be inaccurate.\n<p>@param  …\n"],["visible?","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-visible-3F","()",""],["visible?","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-visible-3F","()",""],["visible_text","Capybara::Driver::Node","Capybara/Driver/Node.html#method-i-visible_text","()",""],["visible_text","Capybara::RackTest::Node","Capybara/RackTest/Node.html#method-i-visible_text","()",""],["visible_text","Capybara::Selenium::Node","Capybara/Selenium/Node.html#method-i-visible_text","()",""],["visit","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-visit","(path)",""],["visit","Capybara::RackTest::Browser","Capybara/RackTest/Browser.html#method-i-visit","(path, attributes = {})",""],["visit","Capybara::RackTest::Driver","Capybara/RackTest/Driver.html#method-i-visit","(path, attributes = {})",""],["visit","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-visit","(path)",""],["visit","Capybara::Session","Capybara/Session.html#method-i-visit","(visit_uri)","<p>Navigate to the given URL. The URL can either be a relative URL or an\nabsolute URL The behaviour of either …\n"],["visit_host_links","Object","Object.html#method-i-visit_host_links","()",""],["wait","Capybara::Queries::BaseQuery","Capybara/Queries/BaseQuery.html#method-i-wait","()",""],["wait","Capybara::Queries::BaseQuery","Capybara/Queries/BaseQuery.html#method-c-wait","(options, default=Capybara.default_max_wait_time)",""],["wait?","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-wait-3F","()",""],["wait?","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-wait-3F","()",""],["wait_for_pending_requests","Capybara::Server","Capybara/Server.html#method-i-wait_for_pending_requests","()",""],["wait_for_stable_size","Capybara::Window","Capybara/Window.html#method-i-wait_for_stable_size","(seconds=session.config.default_max_wait_time)",""],["warn_exact_usage","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-warn_exact_usage","()",""],["where","XPath::Renderer","XPath/Renderer.html#method-i-where","(on, condition)",""],["win_size","Object","Object.html#method-i-win_size","()",""],["window_handles","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-window_handles","()",""],["window_handles","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-window_handles","()",""],["window_opened_by","Capybara::Session","Capybara/Session.html#method-i-window_opened_by","(options = {}, &block)","<p>Get the window that has been opened by the passed block. It will wait for\nit to be opened (in the same …\n"],["window_size","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-window_size","(handle)",""],["window_size","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-window_size","(handle)",""],["windows","Capybara::Session","Capybara/Session.html#method-i-windows","()","<p>Get all opened windows. The order of windows in returned array is not\ndefined. The driver may sort windows …\n"],["within","Capybara::RSpecMatcherProxies","Capybara/RSpecMatcherProxies.html#method-i-within","(*args)",""],["within","Capybara::Session","Capybara/Session.html#method-i-within","(*args)","<p>Executes the given block within the context of a node. `within` takes the\nsame options as `find`, as …\n"],["within_element","Capybara::Session","Capybara/Session.html#method-i-within_element","(*args)",""],["within_fieldset","Capybara::Session","Capybara/Session.html#method-i-within_fieldset","(locator)","<p>Execute the given block within the a specific fieldset given the id or\nlegend of that fieldset.\n<p>@param …\n"],["within_frame","Capybara::Session","Capybara/Session.html#method-i-within_frame","(*args)","<p>Execute the given block within the given iframe using given frame, frame\nname/id or index. May not be …\n"],["within_given_window","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-within_given_window","(handle)",""],["within_table","Capybara::Session","Capybara/Session.html#method-i-within_table","(locator)","<p>Execute the given block within the a specific table given the id or caption\nof that table.\n<p>@param [String] …\n"],["within_window","Capybara::Driver::Base","Capybara/Driver/Base.html#method-i-within_window","(locator)",""],["within_window","Capybara::Selenium::Driver","Capybara/Selenium/Driver.html#method-i-within_window","(locator)",""],["within_window","Capybara::Session","Capybara/Session.html#method-i-within_window","(window_or_handle)","<p>This method does the following:\n<p>Switches to the given window (it can be located by window\ninstance/lambda/string …\n"],["wrap","Capybara::RSpecMatchers::Matcher","Capybara/RSpecMatchers/Matcher.html#method-i-wrap","(actual)",""],["wrap_does_not_match?","Capybara::RSpecMatchers::Matcher","Capybara/RSpecMatchers/Matcher.html#method-i-wrap_does_not_match-3F","(actual)",""],["wrap_matches?","Capybara::RSpecMatchers::Matcher","Capybara/RSpecMatchers/Matcher.html#method-i-wrap_matches-3F","(actual)",""],["xpath","Capybara::Queries::SelectorQuery","Capybara/Queries/SelectorQuery.html#method-i-xpath","(exact=nil)",""],["xpath","Capybara::Selector","Capybara/Selector.html#method-i-xpath","(*expression_filters, &block)","<p>Define a selector by an xpath expression\n<p>@overload xpath(*expression_filters, &amp;block)\n\n<pre>@param [Array&lt;Symbol&gt;] ...</pre>\n"],["another_test_file","","lib/capybara/spec/fixtures/another_test_file_txt.html","","<p>ThisIsTheOtherTestFile\n"],["capybara.jpg","","lib/capybara/spec/fixtures/capybara_jpg.html","","<p>This is a jpeg file :) Since it is rendered in the view it doesn&#39;t\nactually contain any binary data, …\n"],["no_extension","","lib/capybara/spec/fixtures/no_extension.html","","<p>ThisFileHAsNoExtension\n"],["test_file","","lib/capybara/spec/fixtures/test_file_txt.html","","<p>ThisIsTheTestFile\n"],["jquery-ui.js","","lib/capybara/spec/public/jquery-ui_js.html","","\n<pre>! jQuery UI - v1.11.4 - 2015-03-11\nhttp://jqueryui.com\nIncludes: core.js, widget.js, mouse.js, position.js, ...</pre>\n"],["jquery.js","","lib/capybara/spec/public/jquery_js.html","","\n<pre>! jQuery v1.11.3 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license</pre>\n<p>!function(a,b){“object”==typeof …\n"],["test.js","","lib/capybara/spec/public/test_js.html","","<p>var activeRequests = 0; $(function() {\n\n<pre>$(&#39;#change&#39;).text(&#39;I changed it&#39;);\n$(&#39;#drag&#39;).draggable();\n$(&#39;#drop&#39;).droppable({ ...</pre>\n"]]}}